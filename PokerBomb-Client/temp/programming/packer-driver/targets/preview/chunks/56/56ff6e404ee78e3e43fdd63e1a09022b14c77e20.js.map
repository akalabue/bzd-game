{"version":3,"sources":["file:///D:/Documents/OneDrive/%E6%A1%8C%E9%9D%A2/%E5%85%B6%E4%BB%96%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%AF%95%E4%B8%9A%E8%AE%BE%E8%AE%A1/PokerBomb/PokerBomb-Client/assets/Script/games/bazhadan/BZDSceneMgt.ts"],"names":["_decorator","Component","Node","Label","SpriteAtlas","resources","Sprite","director","tween","Vec3","PushCardVo","ccclass","property","BZDSceneMgt","cardList","pokerAtlas","cardSet","Set","pushcardVo","start","init","console","log","globalThis","_eventtarget","on","onRequestRoomInfo","onDealCards","onPushCards","data","roomInfo","roomId","string","gamecount","currentNumbers","gameNumbers","scoreNumbers","updateAllSeats","gameRoles","users","cur","i","userId","_userInfo","user_id","seatName","userName","seatTotalPoints","totalPoints","seatJuPoints","juPoints","seatPanPoints","panPoints","ready","isReady","readyOk","active","readyBtn","cancelReadyBtn","room_seat","onReadyBtnClicked","_BZDClient","sendMessage","seat","room_id","onCancelReadyBtnClicked","onStartBtnClicked","startBtn","onExitRoomBtnClicked","loadScene","cards","onloadAtlas","load","err","spriteAtlas","showPoker","pokerView","pk","getSpriteFrame","cardName","cardNode","getChildByName","sp","getComponent","spriteFrame","passBtn","pushCardBtn","onCardClicked","type","arg","p","getPosition","has","delete","y","add","setPosition","onPushCardBtnClicked","spf","cardValue","name","curCardList","push","Number","curSeat","pushCardsInfo","JSON","stringify","isRight","preSeat","length","size","d_x","x","to","position","clear","preCardList"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Label, System, assetManager, AssetManager, SpriteAtlas, Prefab, instantiate, resources, SpriteFrame, Sprite, director, tween, Vec3 } from 'cc';\nimport { GameRole } from '../../common/GameRole';\nimport { PushCardVo } from '../../common/PushCardVo';\nimport { Poker } from './Poker';\nimport { PokerCtr } from './PokerCtr';\nconst { ccclass, property } = _decorator;\n\n@ccclass('BZDSceneMgt')\nexport class BZDSceneMgt extends Component {\n\n    @property(Label)\n    public roomId: Label\n    @property(Label)\n    public gamecount: Label\n\n    @property(Label)\n    seatName: Label[] = [];\n    @property(Label)\n    seatTotalPoints: Label[] = [];\n    \n    @property(Label)\n    seatJuPoints: Label[] = []\n    \n    @property(Label)\n    seatPanPoints: Label[] = []\n    \n    @property(Node)\n    readyOk: Node[] = []\n    \n    @property(Node)\n    readyBtn: Node\n    \n    @property(Node)\n    cancelReadyBtn: Node\n    \n    @property(Node)\n    startBtn: Node\n\n    @property(Node)\n    pokerView: Node\n\n    @property(Node)\n    passBtn: Node\n\n    @property(Node)\n    pushCardBtn: Node\n\n    cardList: number[];\n    pokerAtlas: SpriteAtlas;\n    cardSet: Set<number> = new Set;\n    pushcardVo: PushCardVo\n\n    \n    start() {\n        this.init();\n        console.log(\"怡怡最美~\");\n        console.log(\"最爱怡怡~\");\n    }\n\n    private init(){\n        this.pushcardVo = new PushCardVo();\n        globalThis._eventtarget.on(\"requestRoomInfo\", this.onRequestRoomInfo, this);\n        globalThis._eventtarget.on(\"dealCards\", this.onDealCards, this);\n        globalThis._eventtarget.on(\"pushCards\", this.onPushCards, this);\n    }\n\n    \n    public onRequestRoomInfo(data){\n        console.log(\"onrequestroomInfo: \",data);\n        let roomInfo = data.roomInfo;\n        this.roomId.string = roomInfo.roomId;\n        this.gamecount.string = roomInfo.currentNumbers + \"/\" + roomInfo.gameNumbers + \"局 \" + roomInfo.scoreNumbers + \"分\";\n        // if(roomInfo.readyNumbers == 4 && globalThis._userInfo.user_id == roomInfo.createUserId)this.startBtn.active = true;\n        // else this.startBtn.active = false;\n        this.updateAllSeats(roomInfo.gameRoles);\n    }\n\n    updateAllSeats(users: GameRole[]){\n        // console.log(\"获取到所有座位信息：\",users);\n        let cur = 0;\n\n        //渲染本座位\n        for(let i = 0; i < 4; i++){\n            if(users[i] == null){\n                continue;\n            }\n            if(users[i].userId == globalThis._userInfo.user_id){\n                cur = i;\n                this.seatName[0].string = users[i].userName;\n                this.seatTotalPoints[0].string = \"总分:\" + users[i].totalPoints;\n                this.seatJuPoints[0].string = \"局:\" + users[i].juPoints;\n                this.seatPanPoints[0].string = \"盘:\" + users[i].panPoints;\n                let ready:boolean = (users[i].isReady == 1);\n                this.readyOk[0].active = ready;\n                this.readyBtn.active = !ready;\n                this.cancelReadyBtn.active = ready;\n            }\n        }\n        globalThis._userInfo.room_seat = cur;\n        //渲染其他座位\n        for(let i = 1; i < 4; i++){\n            if(++cur >= 4)cur -= 4;\n            if(users[cur] == null)continue;\n            this.seatName[i].string = users[cur].userName;\n            this.seatTotalPoints[i].string = \"总分:\" + users[cur].totalPoints;\n            this.seatJuPoints[i].string = \"局:\" + users[cur].juPoints;\n            this.seatPanPoints[i].string = \"盘:\" + users[cur].panPoints;\n            this.readyOk[i].active = (users[cur].isReady == 1);\n        }\n    }\n\n    onReadyBtnClicked(){\n        globalThis._BZDClient.sendMessage(\"userReady\",{seat:globalThis._userInfo.room_seat, isReady: 1, roomId:globalThis._userInfo.room_id})\n    }\n\n    onCancelReadyBtnClicked(){\n        globalThis._BZDClient.sendMessage(\"userReady\",{seat:globalThis._userInfo.room_seat, isReady: -1, roomId:globalThis._userInfo.room_id})\n    }\n\n    onStartBtnClicked(){\n        this.startBtn.active = false;\n        this.readyBtn.active = false;\n        this.cancelReadyBtn.active = false;\n        for(let i = 0; i < 4; i++){\n            this.readyOk[i].active = false;\n        }\n        globalThis._BZDClient.sendMessage(\"dealCards\",{});\n    }\n\n    onExitRoomBtnClicked(){\n        director.loadScene(\"HallScene\");\n    }\n\n    onDealCards(data){\n        console.log(\"获得牌型：\",data);\n        let cards = data.cardList[globalThis._userInfo.room_seat];\n        \n        this.cardList = cards;\n        this.onloadAtlas()\n    }\n\n    onloadAtlas() {\n        resources.load(\"image/games/bazhadan/card/pokerlist\", SpriteAtlas, (err, spriteAtlas)=>{\n            if(err)console.log(\"load atlas err: \", err);\n            else {\n                this.pokerAtlas = spriteAtlas;\n                console.log(\"this.atlas: \", this.pokerAtlas);\n                this.showPoker();\n            }\n        })\n    }\n    showPoker() {\n        this.pokerView.active = true;\n        for(let i = 0; i < 27; i++){\n            let pk = this.pokerAtlas.getSpriteFrame(this.cardList[i]+\"\");\n            let cardName = \"card\" + i;\n            let cardNode = this.pokerView.getChildByName(cardName);\n            let sp = cardNode.getComponent(Sprite);\n            sp.spriteFrame = pk;\n        }\n        this.passBtn.active = true;\n        this.pushCardBtn.active = true;\n    }\n\n    onCardClicked(type,arg){\n        console.log(arg);\n        let cardName = \"card\" + arg;\n        let cardNode = this.pokerView.getChildByName(cardName);\n        \n        let p = cardNode.getPosition();\n        console.log(\"position:\",p)\n        if(this.cardSet.has(arg)){\n            this.cardSet.delete(arg);\n            p.y -= 30;\n        }else {\n            this.cardSet.add(arg);\n            p.y += 30;\n        }\n        cardNode.setPosition(p);\n        console.log(this.cardSet);\n    }\n\n    onPushCardBtnClicked(){\n        console.log(\"出牌！\")\n        for(let i of this.cardSet){\n            let cardName = \"card\" + i;\n            let cardNode = this.pokerView.getChildByName(cardName);\n            let sp = cardNode.getComponent(Sprite);\n            let spf = sp.spriteFrame;\n            let cardValue = spf.name;\n            this.pushcardVo.curCardList.push(Number(cardValue));\n        }\n        this.pushcardVo.curSeat = globalThis._userInfo.room_seat;\n        globalThis._BZDClient.sendMessage(\"pushCards\",{pushCardsInfo: JSON.stringify(this.pushcardVo)});\n        \n    }\n\n    onPushCards(data){\n        console.log(\"接收到服务器出牌信息：\",data);\n        this.pushcardVo = data.pushCardsInfo;\n        let curSeat = globalThis._userInfo.room_seat;\n        let isRight: boolean = data.isRight;\n        //出牌正确\n        if(isRight){\n            //是我出的牌\n            if(curSeat == this.pushcardVo.preSeat){\n                let length = this.cardSet.size;\n                let d_x = 30;\n                let x = -70 - d_x * (length / 2);\n                for(let i of this.cardSet){\n                    let cardName = \"card\" + i;\n                    let cardNode = this.pokerView.getChildByName(cardName);\n                    tween(cardNode).to(0.8,{position: new Vec3(x,90,0)}).start();\n                    x += d_x;\n                }\n                this.cardSet.clear();\n                this.passBtn.active = false;\n                this.pushCardBtn.active = false;\n            }\n            \n            //不是我出的牌，将对应出牌位置更新\n            else{\n                //先更新出牌位置信息(将牌型展出)，到下一家出牌\n                let cardList = this.pushcardVo.preCardList;\n                //如果下家是我\n                if((this.pushcardVo.preSeat + 1) % 4 == curSeat){\n                    this.passBtn.active = false;\n                    this.pushCardBtn.active = false;\n                }\n            }\n        }\n        //出牌不正确\n        else {\n            if(curSeat == this.pushcardVo.curSeat){\n                //是我出的牌\n                console.log(\"不能这样出牌！\");\n            }\n            else {\n                //不是我出的牌，不用管\n            }\n        }\n    }\n}\n\n"]}