{"version":3,"sources":["file:///D:/Documents/OneDrive/%E6%A1%8C%E9%9D%A2/%E5%85%B6%E4%BB%96%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%AF%95%E4%B8%9A%E8%AE%BE%E8%AE%A1/PokerBomb/bzd-game/PokerBomb-Client/assets/Script/loginScene/LoginScene.ts"],"names":["_decorator","Component","Node","EditBox","director","ccclass","property","LoginScence","start","sysInfo","wx","getSystemInfoSync","screenWidth","screenHeight","self","vxLoginBtn","createUserInfoButton","type","text","style","left","top","width","height","lineHeight","backgroundColor","color","textAlign","fontSize","borderRadius","onTap","res","console","log","userInfo","wxLogin","getUserInfo","success","fail","login","code","request","url","window","location","hostname","method","header","data","nickName","avatarUrl","onLoginMessage","errMsg","loadScene","onLoginBtnClicked","str","my_EditBox","getComponent","string","httpRequest","XMLHttpRequest","open","setRequestHeader","send","onreadystatechange","readyState","status","JSON","parse","responseText","onVxLoginBtnClicked","globalThis","_userInfo","user_id","userId","user_name","user_head_url","user_room_cards","userRoomCards","room_id","roomId"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, EditBox, director } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('LoginScence')\r\nexport class LoginScence extends Component {\r\n\r\n    @property(Node)\r\n    public my_EditBox: Node\r\n\r\n    start() {\r\n        // globalThis._eventtarget.on('login', this.onLoginMessage,this);\r\n        let sysInfo = wx.getSystemInfoSync();\r\n        //获取微信界面大小\r\n        let screenWidth = sysInfo.screenWidth;\r\n        let screenHeight = sysInfo.screenHeight;\r\n        let self = this;\r\n        const vxLoginBtn = wx.createUserInfoButton({\r\n            type: 'text',\r\n            text: '微信登录',\r\n            style: {\r\n            //   left: 0,\r\n            //   top: 0,\r\n            //   width: screenWidth,\r\n            //   height: screenHeight,\r\n            //   lineHeight: 40,\r\n            //   backgroundColor: '#00000000',\r\n            //   color: '#ffffff',\r\n            //   textAlign: 'center',\r\n                left: 10,\r\n                top: 76,\r\n                width: 200,\r\n                height: 40,\r\n                lineHeight: 40,\r\n                backgroundColor: '#ff0000',\r\n                color: '#ffffff',\r\n                textAlign: 'center',\r\n                fontSize: 16,\r\n                borderRadius: 4\r\n            }\r\n          });\r\n          vxLoginBtn.onTap((res) => {\r\n            // 此处可以获取到用户信息\r\n            console.log(res.userInfo);\r\n            let userInfo = res.userInfo;\r\n            self.wxLogin(userInfo);\r\n          })\r\n\r\n          wx.getUserInfo({\r\n              success(res){\r\n                  let userInfo = res.userInfo;\r\n                  self.wxLogin(userInfo);\r\n              },\r\n              fail(){\r\n                  console.log(\"获取用户信息失败\")\r\n              }\r\n          })\r\n    }\r\n\r\n    wxLogin(userInfo) {\r\n        let self = this;\r\n        wx.login({\r\n            success(res){\r\n                if(res.code){\r\n                    wx.request({\r\n                        url:`http://${window.location.hostname}:9091/wxlogin`,\r\n                        method:\"POST\",\r\n                        header:{\r\n                            'content-type':'application/x-www-form-urlencoded'\r\n                        },\r\n                        data:{\r\n                            code: res.code,\r\n                            nickName: userInfo.nickName,\r\n                            avatarUrl: userInfo.avatarUrl\r\n                        },\r\n                        success(res) {\r\n                            self.onLoginMessage(res.data);\r\n                        }\r\n                        \r\n                    })\r\n                }else {\r\n                    console.log(\"登陆失败\" + res.errMsg);\r\n                }\r\n            }\r\n        })\r\n        director.loadScene(\"HallScene\");\r\n    }\r\n\r\n    /**\r\n     * onLogin\r\n     */\r\n    public onLoginBtnClicked() {\r\n        let self = this;\r\n        let str = this.my_EditBox.getComponent(EditBox).string;\r\n        console.log(\"获取账号:\",str);\r\n        var httpRequest = new XMLHttpRequest();//第一步：创建需要的对象\r\n        httpRequest.open('POST', `http://${window.location.hostname}:9091/login`, true); //第二步：打开连接\r\n        httpRequest.setRequestHeader(\"Content-type\",\"application/x-www-form-urlencoded\");//设置请求头 注：post方式必须设置请求头（在建立连接后设置请求头）\r\n        httpRequest.send(`userid=${str}`);//发送请求 将情头体写在send中\r\n        /**\r\n         * 获取数据后的处理程序\r\n         */ \r\n        httpRequest.onreadystatechange = function () {//请求后的回调接口，可将请求成功后要执行的程序写在其中\r\n            if (httpRequest.readyState == 4 && httpRequest.status == 200) {//验证请求是否发送成功\r\n                let data = JSON.parse(httpRequest.responseText);//获取到服务端返回的数据\r\n                self.onLoginMessage(data);\r\n            }\r\n        };\r\n    }\r\n\r\n    /**\r\n     * onVxLoginBtnClicked\r\n     */\r\n    public onVxLoginBtnClicked() {\r\n        \r\n    }\r\n\r\n    public onLoginMessage(data){\r\n        console.log(\"处理玩家登录消息: \", data);\r\n        globalThis._userInfo.user_id = data.userId;\r\n        globalThis._userInfo.user_name = data.nickName;\r\n        globalThis._userInfo.user_head_url = data.avatarUrl;\r\n        globalThis._userInfo.user_room_cards = data.userRoomCards;\r\n        globalThis._userInfo.room_id = data.roomId;\r\n\r\n        // 加载大厅场景\r\n        director.loadScene(\"HallScene\");\r\n    }\r\n\r\n    \r\n}\r\n\r\n"]}