{"version":3,"sources":["file:///D:/Documents/OneDrive/%E6%A1%8C%E9%9D%A2/%E5%85%B6%E4%BB%96%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%AF%95%E4%B8%9A%E8%AE%BE%E8%AE%A1/PokerBomb/PokerBomb-Client/assets/Script/games/bazhadan/Poker.ts"],"names":["_decorator","Component","Prefab","SpriteAtlas","resources","instantiate","Sprite","ccclass","property","Poker","pokerNode","pokerAtlas","cardList","start","update","deltaTime","init","load","err","spriteAtlas","console","log","onLoadPrefab","prefab","showPoker","i","pk","getSpriteFrame","cardName","cardNode","getChildByName","sp","getComponent","spriteFrame"],"mappings":";;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,M,OAAAA,M;;;;;;;OAC7E;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBR,U;;uBAGjBS,K,WADZF,OAAO,CAAC,OAAD,C,gBAAR,MACaE,KADb,SAC2BR,SAD3B,CACqC;AAAA;AAAA;AAAA,eAEjCS,SAFiC;AAAA,eAGjCC,UAHiC;AAAA,eAIjCC,QAJiC;AAAA;;AAMjCC,QAAAA,KAAK,GAAG,CACP;;AAEDC,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB;;AAEDC,QAAAA,IAAI,CAACJ,QAAD,EAAoB;AACpB,eAAKA,QAAL,GAAgBA,QAAhB;AACAR,UAAAA,SAAS,CAACa,IAAV,CAAe,qCAAf,EAAsDd,WAAtD,EAAmE,CAACe,GAAD,EAAMC,WAAN,KAAoB;AACnF,gBAAGD,GAAH,EAAOE,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCH,GAAhC,EAAP,KACK;AACD,mBAAKP,UAAL,GAAkBQ,WAAlB;AACAC,cAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4B,KAAKV,UAAjC;AACA,mBAAKW,YAAL;AACH;AACJ,WAPD;AAQH;;AAEDA,QAAAA,YAAY,GAAE;AACVlB,UAAAA,SAAS,CAACa,IAAV,CAAe,gCAAf,EAAiDf,MAAjD,EAAyD,CAACgB,GAAD,EAAMK,MAAN,KAAuB;AAC5E,gBAAGL,GAAH,EAAOE,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCH,GAAjC,EAAP,KACK;AACD,mBAAKR,SAAL,GAAiBL,WAAW,CAACkB,MAAD,CAA5B;AACAH,cAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyB,KAAKX,SAA9B,EAFC,CAGD;;AACA,mBAAKc,SAAL;AACH;AACJ,WARD;AASH;;AACDA,QAAAA,SAAS,GAAG;AACR,eAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,CAAnB,EAAsBA,CAAC,EAAvB,EAA0B;AACtB,gBAAIC,EAAE,GAAG,KAAKf,UAAL,CAAgBgB,cAAhB,CAA+B,KAAKf,QAAL,CAAca,CAAd,IAAiB,EAAhD,CAAT;AACA,gBAAIG,QAAQ,GAAG,UAAUH,CAAC,GAAG,CAAd,CAAf;AACAL,YAAAA,OAAO,CAACC,GAAR,CAAYO,QAAZ;AACAR,YAAAA,OAAO,CAACC,GAAR,CAAY,KAAKX,SAAjB;AACA,gBAAImB,QAAQ,GAAG,KAAKnB,SAAL,CAAeoB,cAAf,CAA8BF,QAA9B,CAAf;AACAR,YAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwBQ,QAAxB;AACA,gBAAIE,EAAE,GAAGF,QAAQ,CAACG,YAAT,CAAsB1B,MAAtB,CAAT;AACAyB,YAAAA,EAAE,CAACE,WAAH,GAAiBP,EAAjB;AACH;AACJ;;AA/CgC,O","sourcesContent":["import { _decorator, Component, Node, Prefab, SpriteAtlas, resources, instantiate, Sprite } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('Poker')\nexport class Poker extends Component {\n\n    pokerNode: Node\n    pokerAtlas: SpriteAtlas\n    cardList: number[]\n\n    start() {\n    }\n\n    update(deltaTime: number) {\n        \n    }\n\n    init(cardList: number[]){\n        this.cardList = cardList;\n        resources.load(\"image/games/bazhadan/card/pokerlist\", SpriteAtlas, (err, spriteAtlas)=>{\n            if(err)console.log(\"load atlas err: \", err);\n            else {\n                this.pokerAtlas = spriteAtlas;\n                console.log(\"this.atlas: \", this.pokerAtlas);\n                this.onLoadPrefab();\n            }\n        })\n    }\n\n    onLoadPrefab(){\n        resources.load(\"image/games/bazhadan/PokerView\", Prefab, (err, prefab: Prefab)=>{\n            if(err)console.log(\"load prefab err: \", err);\n            else {\n                this.pokerNode = instantiate(prefab);\n                console.log(\"pokerNode:\",this.pokerNode);\n                // this.node.addChild(this.pokerPrefab);\n                this.showPoker();\n            }\n        })\n    }\n    showPoker() {\n        for(let i = 0; i < 7; i++){\n            let pk = this.pokerAtlas.getSpriteFrame(this.cardList[i]+\"\");\n            let cardName = \"card\" + (i + 1);\n            console.log(cardName);\n            console.log(this.pokerNode)\n            let cardNode = this.pokerNode.getChildByName(cardName);\n            console.log(\"cardNode:\",cardNode);\n            let sp = cardNode.getComponent(Sprite);\n            sp.spriteFrame = pk;\n        }\n    }\n}\n\n"]}