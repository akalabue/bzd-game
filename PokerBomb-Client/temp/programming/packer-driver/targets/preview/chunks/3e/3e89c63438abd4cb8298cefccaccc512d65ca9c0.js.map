{"version":3,"sources":["file:///D:/CocosProjects/PokerBomb/assets/Script/LoginClient.ts"],"names":["_decorator","Component","EventTarget","ccclass","property","eventtarget","globalThis","_eventtarget","LoginClient","_ws","start","_init","update","deltaTime","_loginClientMgr","_connectServer","ws","WebSocket","onopen","console","log","onmessage","result","message","data","type","responseServerMessage","onclose","onerror","err","emit","sendMessage","_type","_data","sendData","send","JSON","stringify"],"mappings":";;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,W,OAAAA,W;;;;;;;OAChC;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBJ,U;AAExBK,MAAAA,W,GAAc,IAAIH,WAAJ,E;AACpBI,MAAAA,UAAU,CAACC,YAAX,GAA0BF,WAA1B,C,CAAsC;;6BAGzBG,W,WADZL,OAAO,CAAC,aAAD,C,gBAAR,MACaK,WADb,SACiCP,SADjC,CAC2C;AAAA;AAAA;AAAA,eAE/BQ,GAF+B,GAEnB,IAFmB;AAAA;;AAIvCC,QAAAA,KAAK,GAAG;AACJ,eAAKC,KAAL;AACH;;AAEDC,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB;;AAEOF,QAAAA,KAAK,GAAG;AACZL,UAAAA,UAAU,CAACQ,eAAX,GAA6B,IAA7B,CADY,CACsB;;AAClC,eAAKC,cAAL;AACH;;AAEOA,QAAAA,cAAc,GAAE;AACpB,cAAMC,EAAE,GAAG,IAAIC,SAAJ,CAAc,iCAAd,CAAX;AACA,eAAKR,GAAL,GAAWO,EAAX;;AACAA,UAAAA,EAAE,CAACE,MAAH,GAAY,MAAI;AACZC,YAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EADY,CAEZ;AACH,WAHD;;AAIAJ,UAAAA,EAAE,CAACK,SAAH,GAAgBC,MAAD,IAAU;AACrB,gBAAIC,OAAO,GAAGD,MAAM,CAACE,IAArB;AACAL,YAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwBG,OAAxB;AACA,gBAAIE,IAAI,GAAGF,OAAO,CAACE,IAAnB;AACA,gBAAID,IAAI,GAAGD,OAAO,CAACC,IAAnB;AACAL,YAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BK,IAA9B,EAAoC,MAApC,EAA4CD,IAA5C;AACA,iBAAKE,qBAAL,CAA2BD,IAA3B,EAAiCD,IAAjC;AACH,WAPD;;AAQAR,UAAAA,EAAE,CAACW,OAAH,GAAa,MAAI;AACbR,YAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACH,WAFD;;AAGAJ,UAAAA,EAAE,CAACY,OAAH,GAAcC,GAAD,IAAO;AAChBV,YAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBS,GAAtB;AACH,WAFD;AAGH;AAED;AACJ;AACA;;;AAEWH,QAAAA,qBAAqB,CAACD,IAAD,EAAOD,IAAP,EAAY;AACpC;AACAlB,UAAAA,UAAU,CAACC,YAAX,CAAwBuB,IAAxB,CAA6BL,IAA7B,EAAmCD,IAAnC;AACH;;AAEOO,QAAAA,WAAW,CAACC,KAAD,EAAQC,KAAR,EAAc;AAC7B,cAAIC,QAAQ,GAAG;AACXT,YAAAA,IAAI,EAAEO,KADK;AAEXR,YAAAA,IAAI,EAAES;AAFK,WAAf;;AAIA,eAAKxB,GAAL,CAAS0B,IAAT,CAAcC,IAAI,CAACC,SAAL,CAAeH,QAAf,CAAd,EAL6B,CAKW;;AAC3C;;AAvDsC,O","sourcesContent":["import { _decorator, Component, Node, EventTarget} from 'cc';\nconst { ccclass, property } = _decorator;\n\nconst eventtarget = new EventTarget();\nglobalThis._eventtarget = eventtarget;//globalThis是全局的\n\n@ccclass('LoginClient')\nexport class LoginClient extends Component {\n\n    private _ws : any = null;\n\n    start() {\n        this._init();\n    }\n\n    update(deltaTime: number) {\n        \n    }\n\n    private _init() {\n        globalThis._loginClientMgr = this;//使得全局能够获取此对象\n        this._connectServer();\n    }\n\n    private _connectServer(){\n        const ws = new WebSocket(\"ws:127.0.0.1:9090/websocket/wyp\");\n        this._ws = ws;\n        ws.onopen = ()=>{\n            console.log(\"连接成功\");\n            // ws.send(\"你好啊，服务器，我是wyp客户端\");\n        }\n        ws.onmessage = (result)=>{\n            let message = result.data;\n            console.log(\"接收到服务器消息：\",message);\n            let type = message.type;\n            let data = message.data;\n            console.log(\"服务端发送数据--> 类型：\", type, \" 数据：\", data)\n            this.responseServerMessage(type, data);\n        }\n        ws.onclose = ()=>{\n            console.log(\"与服务器断开连接\");\n        }\n        ws.onerror = (err)=>{\n            console.log(\"网络连接出错：\",err);\n        }\n    }\n\n    /**\n     * 响应服务端消息 type-->消息类型，  data-->消息数据\n     */\n\n    public responseServerMessage(type, data){\n        // console.log(\"服务端发送数据--> 类型：\", type, \" 数据：\", data)\n        globalThis._eventtarget.emit(type, data);\n    }\n\n    private sendMessage(_type, _data){\n        let sendData = {\n            type: _type,\n            data: _data\n        }\n        this._ws.send(JSON.stringify(sendData));//将javascript对象转为字符串\n    }\n}\n\n"]}