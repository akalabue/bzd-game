{"version":3,"sources":["file:///D:/Documents/OneDrive/%E6%A1%8C%E9%9D%A2/%E5%85%B6%E4%BB%96%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%AF%95%E4%B8%9A%E8%AE%BE%E8%AE%A1/PokerBomb/PokerBomb-Client/assets/Script/hallScene/HallSoundMgt.ts"],"names":["_decorator","Component","AudioClip","AudioSource","ccclass","property","HallSoundMgt","constructor","_dict","Map","_audioSource","getInstance","instance","start","i","audioList","length","element","console","log","set","name","getComponent","play","audioClip","get","undefined","playOneShot"],"mappings":";;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,W,OAAAA,W;;;;;;;OAC3C;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBL,U;;8BAGjBM,Y,WADZF,OAAO,CAAC,UAAD,C,UAcHC,QAAQ,CAAC,CAACH,SAAD,CAAD,C,sCAdb,MACaI,YADb,SACkCL,SADlC,CAC4C;AAGhCM,QAAAA,WAAW,GAAG;AAClB;;AADkB;;AAAA,eAadC,KAbc,GAakB,IAAIC,GAAJ,EAblB;AAAA,eAcdC,YAdc,GAcc,IAdd;AAErB;AACD;AACJ;AACA;;;AAC6B,eAAXC,WAAW,GAAG;AACxB,cAAG,CAACL,YAAY,CAACM,QAAjB,EAA0BN,YAAY,CAACM,QAAb,GAAwB,IAAIN,YAAJ,EAAxB;AAC1B,iBAAOA,YAAY,CAACM,QAApB;AACH;;AAODC,QAAAA,KAAK,GAAG;AACJ,eAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKC,SAAL,CAAeC,MAAnC,EAA2CF,CAAC,EAA5C,EAAgD;AAC5C,gBAAMG,OAAO,GAAG,KAAKF,SAAL,CAAeD,CAAf,CAAhB;AACAI,YAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;;AACA,iBAAKT,KAAL,CAAWY,GAAX,CAAeH,OAAO,CAACI,IAAvB,EAA6BJ,OAA7B;AACH;;AAED,eAAKP,YAAL,GAAoB,KAAKY,YAAL,CAAkBnB,WAAlB,CAApB,CAPI,CAO+C;AACtD;;AAEMoB,QAAAA,IAAI,CAACF,IAAD,EAAe;AACtB,cAAMG,SAAS,GAAG,KAAKhB,KAAL,CAAWiB,GAAX,CAAeJ,IAAf,CAAlB;;AACA,cAAIG,SAAS,KAAKE,SAAlB,EAA6B;AACzB,iBAAKhB,YAAL,CAAkBiB,WAAlB,CAA8BH,SAA9B;AACH;AACJ;;AAlCuC,O,UAEzBZ,Q;;;;;iBAYiB,E","sourcesContent":["import { _decorator, Component, Node, AudioClip, AudioSource } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('SoundMgt')\nexport class HallSoundMgt extends Component {\n\n    private static instance: HallSoundMgt;\n    private constructor() {\n        super();\n    }\n    /**\n     * getInstance\n     */\n    public static getInstance() {\n        if(!HallSoundMgt.instance)HallSoundMgt.instance = new HallSoundMgt();\n        return HallSoundMgt.instance;\n    }\n    @property([AudioClip])\n    public audioList: AudioClip[] = [];\n\n    private _dict: Map<String, AudioClip> = new Map();//音频集合\n    private _audioSource: AudioSource = null;\n    \n    start() {\n        for (let i = 0; i < this.audioList.length; i++) {\n            const element = this.audioList[i];\n            console.log(element);\n            this._dict.set(element.name, element);\n        }\n\n        this._audioSource = this.getComponent(AudioSource);//音频组件初始化\n    }\n\n    public play(name: string) {\n        const audioClip = this._dict.get(name);\n        if (audioClip !== undefined) {\n            this._audioSource.playOneShot(audioClip);\n        }\n    }\n}\n\n"]}