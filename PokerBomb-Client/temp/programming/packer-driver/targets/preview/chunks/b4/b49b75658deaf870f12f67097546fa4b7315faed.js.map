{"version":3,"sources":["file:///D:/Documents/OneDrive/%E6%A1%8C%E9%9D%A2/%E5%85%B6%E4%BB%96%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%AF%95%E4%B8%9A%E8%AE%BE%E8%AE%A1/PokerBomb/PokerBomb-Client/assets/Script/games/bazhadan/BZDSceneMgt.ts"],"names":["_decorator","Component","Node","Label","assetManager","SpriteAtlas","Prefab","instantiate","ccclass","property","BZDSceneMgt","gameBundle","pokerAtlas","pokerPrefab","start","init","console","log","globalThis","_eventtarget","on","onRequestRoomInfo","onDealCards","update","deltaTime","data","startBtn","readyBtn","roomInfo","roomId","string","gamecount","currentNumbers","gameNumbers","scoreNumbers","updateAllSeats","gameRoles","loadBundle","err","bundle","onLoadPokerAtlas","load","atlas","onLoadPokerPrefab","prefab","poker","node","addChild","users","cur","i","userId","_userInfo","user_id","seatName","userName","seatTotalPoints","totalPoints","seatJuPoints","juPoints","seatPanPoints","panPoints","ready","isReady","readyOk","active","cancelReadyBtn","room_seat","onReadyBtnClicked","_BZDClient","sendMessage","seat","room_id","onCancelReadyBtnClicked","onStartBtnClicked"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Label, System, assetManager, AssetManager, SpriteAtlas, Prefab, instantiate } from 'cc';\nimport { GameRole } from '../../common/GameRole';\nconst { ccclass, property } = _decorator;\n\n@ccclass('BZDSceneMgt')\nexport class BZDSceneMgt extends Component {\n\n    @property(Label)\n    public roomId: Label\n    @property(Label)\n    public gamecount: Label\n\n    @property(Label)\n    seatName: Label[] = [];\n    @property(Label)\n    seatTotalPoints: Label[] = [];\n    \n    @property(Label)\n    seatJuPoints: Label[] = []\n    \n    @property(Label)\n    seatPanPoints: Label[] = []\n    \n    @property(Node)\n    readyOk: Node[] = []\n    \n    @property(Node)\n    readyBtn: Node\n    \n    @property(Node)\n    cancelReadyBtn: Node\n    \n    @property(Node)\n    startBtn: Node\n\n    private gameBundle: AssetManager.Bundle\n    private pokerAtlas: SpriteAtlas\n    private pokerPrefab: Prefab;\n\n    \n    start() {\n        this.init();\n        console.log(\"怡怡最美~\");\n        console.log(\"最爱怡怡~\");\n    }\n\n    private init(){\n        globalThis._eventtarget.on(\"requestRoomInfo\", this.onRequestRoomInfo, this);\n        globalThis._eventtarget.on(\"dealCards\", this.onDealCards, this);\n    }\n\n    update(deltaTime: number) {\n        \n    }\n\n    public onRequestRoomInfo(data){\n        console.log(\"onrequestroomInfo：\",data);\n        console.log(\"startBtn: \",this.startBtn)\n        console.log(\"readyBtn: \",this.readyBtn)\n        let roomInfo = data.roomInfo;\n        this.roomId.string = roomInfo.roomId;\n        this.gamecount.string = roomInfo.currentNumbers + \"/\" + roomInfo.gameNumbers + \"局 \" + roomInfo.scoreNumbers + \"分\";\n        // if(roomInfo.readyNumbers == 4 && globalThis._userInfo.user_id == roomInfo.createUserId)this.startBtn.active = true;\n        // else this.startBtn.active = false;\n        this.updateAllSeats(roomInfo.gameRoles);\n    }\n\n    onDealCards(data){\n        console.log(\"获得牌型：\",data);\n        assetManager.loadBundle(\"bazhadan\",(err, bundle: AssetManager.Bundle) =>{\n            this.gameBundle = bundle;\n            this.onLoadPokerAtlas();\n        });\n    }\n    onLoadPokerAtlas() {\n        this.gameBundle.load(\"card\", SpriteAtlas, (err, atlas: SpriteAtlas)=>{\n            this.pokerAtlas = atlas;\n            this.onLoadPokerPrefab();\n        })\n    }\n    onLoadPokerPrefab() {\n        this.gameBundle.load(\"PokerView\", Prefab    , (err, prefab: Prefab)=>{\n            this.pokerPrefab = prefab;\n        })\n\n        let poker = instantiate(this.pokerPrefab);\n        this.node.addChild(poker);\n    }\n\n    updateAllSeats(users: GameRole[]){\n        // console.log(\"获取到所有座位信息：\",users);\n        let cur = 0;\n\n        //渲染本座位\n        for(let i = 0; i < 4; i++){\n            if(users[i] == null){\n                continue;\n            }\n            if(users[i].userId == globalThis._userInfo.user_id){\n                cur = i;\n                this.seatName[0].string = users[i].userName;\n                this.seatTotalPoints[0].string = \"总分:\" + users[i].totalPoints;\n                this.seatJuPoints[0].string = \"局:\" + users[i].juPoints;\n                this.seatPanPoints[0].string = \"盘:\" + users[i].panPoints;\n                let ready:boolean = (users[i].isReady == 1);\n                this.readyOk[0].active = ready;\n                this.readyBtn.active = !ready;\n                this.cancelReadyBtn.active = ready;\n            }\n        }\n        globalThis._userInfo.room_seat = cur;\n        //渲染其他座位\n        for(let i = 1; i < 4; i++){\n            if(++cur >= 4)cur -= 4;\n            if(users[cur] == null)continue;\n            this.seatName[i].string = users[cur].userName;\n            this.seatTotalPoints[i].string = \"总分:\" + users[cur].totalPoints;\n            this.seatJuPoints[i].string = \"局:\" + users[cur].juPoints;\n            this.seatPanPoints[i].string = \"盘:\" + users[cur].panPoints;\n            this.readyOk[i].active = (users[cur].isReady == 1);\n        }\n    }\n\n    onReadyBtnClicked(){\n        globalThis._BZDClient.sendMessage(\"userReady\",{seat:globalThis._userInfo.room_seat, isReady: 1, roomId:globalThis._userInfo.room_id})\n    }\n\n    onCancelReadyBtnClicked(){\n        globalThis._BZDClient.sendMessage(\"userReady\",{seat:globalThis._userInfo.room_seat, isReady: -1, roomId:globalThis._userInfo.room_id})\n    }\n\n    onStartBtnClicked(){\n        this.startBtn.active = false;\n        this.readyBtn.active = false;\n        this.cancelReadyBtn.active = false;\n        for(let i = 0; i < 4; i++){\n            this.readyOk[i].active = false;\n        }\n        globalThis._BZDClient.sendMessage(\"dealCards\",{});\n    }\n}\n\n"]}