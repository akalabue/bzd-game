{"version":3,"sources":["file:///D:/Documents/OneDrive/%E6%A1%8C%E9%9D%A2/%E5%85%B6%E4%BB%96%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%AF%95%E4%B8%9A%E8%AE%BE%E8%AE%A1/PokerBomb/PokerBomb-Client/assets/Script/games/bazhadan/BZDSceneMgt.ts"],"names":["_decorator","Component","Node","Label","SpriteAtlas","resources","Sprite","director","tween","Vec3","PushCardVo","ccclass","property","BZDSceneMgt","cardList","pokerAtlas","cardSet","Set","pushcardVo","start","init","console","log","globalThis","_eventtarget","on","onRequestRoomInfo","onDealCards","onPushCards","onUpdatePoints","data","seat","panPoints","seatPanPoints","string","roomInfo","roomId","gamecount","currentNumbers","gameNumbers","scoreNumbers","readyNumbers","_userInfo","user_id","createUserId","startBtn","active","updateAllSeats","gameRoles","users","cur","i","userId","seatName","userName","seatTotalPoints","totalPoints","seatJuPoints","juPoints","ready","userStatus","code","readyOk","readyBtn","cancelReadyBtn","room_seat","onReadyBtnClicked","_BZDClient","sendMessage","isReady","room_id","onCancelReadyBtnClicked","onStartBtnClicked","onExitRoomBtnClicked","loadScene","cleanPushCards","cards","onloadAtlas","load","err","spriteAtlas","showPoker","pokerView","passBtn","pushCardBtn","bpk","getSpriteFrame","x","y","z","pk","cardName","cardNode","getChildByName","setPosition","sp","getComponent","spriteFrame","to","position","call","showPushCardsBtn","onCardClicked","type","arg","p","getPosition","has","delete","add","onPushCardBtnClicked","JSON","stringify","curCardList","length","Array","from","sort","a","b","spf","cardValue","name","push","Number","curSeat","pushCardsInfo","isRight","preSeat","size","d_x","prePushSeat","pushCardsView","preCardList","passLable","clear","paiPoints","points","onPassBtnClicked","cleanCardSet","pcv"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Label, System, assetManager, AssetManager, SpriteAtlas, Prefab, instantiate, resources, SpriteFrame, Sprite, director, tween, Vec3 } from 'cc';\nimport { GameRole } from '../../common/GameRole';\nimport { PushCardVo } from '../../common/PushCardVo';\nimport { Poker } from './Poker';\nimport { PokerCtr } from './PokerCtr';\nconst { ccclass, property } = _decorator;\n\n@ccclass('BZDSceneMgt')\nexport class BZDSceneMgt extends Component {\n\n    @property(Label)\n    public roomId: Label\n    @property(Label)\n    public gamecount: Label\n\n    @property(Label)\n    seatName: Label[] = [];\n    @property(Label)\n    seatTotalPoints: Label[] = [];\n    \n    @property(Label)\n    seatJuPoints: Label[] = []\n    \n    @property(Label)\n    seatPanPoints: Label[] = []\n    \n    @property(Node)\n    readyOk: Node[] = []\n\n    @property(Node)\n    pushCardsView: Node[] = []\n\n    @property(Node)\n    passLable: Node[] = []\n    \n    @property(Node)\n    readyBtn: Node\n    \n    @property(Node)\n    cancelReadyBtn: Node\n    \n    @property(Node)\n    startBtn: Node\n\n    @property(Node)\n    pokerView: Node\n\n    @property(Node)\n    passBtn: Node\n\n    @property(Node)\n    pushCardBtn: Node\n\n    @property(Label)\n    paiPoints: Label\n\n\n    cardList: number[];\n    pokerAtlas: SpriteAtlas;\n    cardSet: Set<number> = new Set;\n    pushcardVo: PushCardVo\n\n    \n    start() {\n        this.init();\n        console.log(\"怡怡最美~\");\n        console.log(\"最爱怡怡~\");\n    }\n\n    private init(){\n        this.pushcardVo = new PushCardVo();\n        globalThis._eventtarget.on(\"requestRoomInfo\", this.onRequestRoomInfo, this);\n        globalThis._eventtarget.on(\"dealCards\", this.onDealCards, this);\n        globalThis._eventtarget.on(\"pushCards\", this.onPushCards, this);\n        globalThis._eventtarget.on(\"updatePoints\", this.onUpdatePoints, this);\n    }\n    onUpdatePoints(data) {\n        let seat = data.seat;\n        if(seat >= 0){\n            let panPoints = data.panPoints;\n            this.seatPanPoints[seat].string = \"盘:\" + panPoints;\n            this.seatPanPoints[(seat + 2) % 4].string = \"盘:\" + panPoints;\n        }\n    }\n\n    \n    public onRequestRoomInfo(data){\n        console.log(\"onrequestroomInfo: \",data);\n        let roomInfo = data.roomInfo;\n        this.roomId.string = roomInfo.roomId;\n        this.gamecount.string = roomInfo.currentNumbers + \"/\" + roomInfo.gameNumbers + \"局 \" + roomInfo.scoreNumbers + \"分\";\n        if(roomInfo.readyNumbers == 4 && globalThis._userInfo.user_id == roomInfo.createUserId)this.startBtn.active = true;\n        else this.startBtn.active = false;\n        this.updateAllSeats(roomInfo.gameRoles);\n    }\n\n    updateAllSeats(users: GameRole[]){\n        // console.log(\"获取到所有座位信息：\",users);\n        let cur = 0;\n\n        //渲染本座位\n        for(let i = 0; i < 4; i++){\n            if(users[i] == null){\n                continue;\n            }\n            if(users[i].userId == globalThis._userInfo.user_id){\n                cur = i;\n                this.seatName[0].string = users[i].userName;\n                this.seatTotalPoints[0].string = \"总分:\" + users[i].totalPoints;\n                this.seatJuPoints[0].string = \"局:\" + users[i].juPoints;\n                this.seatPanPoints[0].string = \"盘:\" + users[i].panPoints;\n                let ready:boolean = (users[i].userStatus.code == 1);\n                this.readyOk[0].active = ready;\n                this.readyBtn.active = !ready;\n                this.cancelReadyBtn.active = ready;\n            }\n        }\n        globalThis._userInfo.room_seat = cur;\n        //渲染其他座位\n        for(let i = 1; i < 4; i++){\n            if(++cur >= 4)cur -= 4;\n            if(users[cur] == null)continue;\n            this.seatName[i].string = users[cur].userName;\n            this.seatTotalPoints[i].string = \"总分:\" + users[cur].totalPoints;\n            this.seatJuPoints[i].string = \"局:\" + users[cur].juPoints;\n            this.seatPanPoints[i].string = \"盘:\" + users[cur].panPoints;\n            this.readyOk[i].active = (users[cur].userStatus.code == 1);\n        }\n    }\n\n    onReadyBtnClicked(){\n        globalThis._BZDClient.sendMessage(\"userReady\",{seat:globalThis._userInfo.room_seat, isReady: 1, roomId:globalThis._userInfo.room_id})\n    }\n\n    onCancelReadyBtnClicked(){\n        globalThis._BZDClient.sendMessage(\"userReady\",{seat:globalThis._userInfo.room_seat, isReady: -1, roomId:globalThis._userInfo.room_id})\n    }\n\n    onStartBtnClicked(){\n        globalThis._BZDClient.sendMessage(\"dealCards\",{});\n    }\n\n    onExitRoomBtnClicked(){\n        director.loadScene(\"HallScene\");\n    }\n\n    onDealCards(data){\n        console.log(\"获得牌型：\",data);\n        \n        this.startBtn.active = false;\n        this.readyBtn.active = false;\n        this.cancelReadyBtn.active = false;\n        //初始化各出牌区域\n        for(let i = 0; i < 4; i++){\n            this.cleanPushCards(i);\n        }\n        for(let i = 0; i < 4; i++){\n            this.readyOk[i].active = false;\n        }\n        let cards = data.cardList[globalThis._userInfo.room_seat];\n        \n        this.cardList = cards;\n        this.onloadAtlas()\n    }\n\n    onloadAtlas() {\n        resources.load(\"image/games/bazhadan/card/pokerlist\", SpriteAtlas, (err, spriteAtlas)=>{\n            if(err)console.log(\"load atlas err: \", err);\n            else {\n                this.pokerAtlas = spriteAtlas;\n                this.showPoker();\n            }\n        })\n    }\n    showPoker() {\n        this.pokerView.active = true;\n        this.passBtn.active = false;\n        this.pushCardBtn.active = false;\n        let bpk = this.pokerAtlas.getSpriteFrame(\"0\");\n        let x = -360, y = -50, z = 0;\n        for(let i = 0; i < 27; i++){\n            if(i == 17){\n                y = -150;\n                x -= 850;\n            }\n            let pk = this.pokerAtlas.getSpriteFrame(this.cardList[i]+\"\");\n            let cardName = \"card\" + i;\n            let cardNode = this.pokerView.getChildByName(cardName);\n            cardNode.setPosition(new Vec3(0, 185, 0));\n            let sp = cardNode.getComponent(Sprite);\n            sp.spriteFrame = bpk;\n            tween(cardNode).to(1.5,{position: new Vec3(i*50+x, y, z)}).call(() => sp.spriteFrame = pk).start();\n        }\n        if(globalThis._userInfo.room_seat == 0){\n            this.showPushCardsBtn();\n        }\n    }\n\n    onCardClicked(type,arg){\n        let cardName = \"card\" + arg;\n        let cardNode = this.pokerView.getChildByName(cardName);\n        \n        let p = cardNode.getPosition()\n        if(this.cardSet.has(arg)){\n            this.cardSet.delete(arg);\n            p.y -= 30;\n        }else {\n            this.cardSet.add(arg);\n            p.y += 30;\n        }\n        cardNode.setPosition(p);\n    }\n\n    onPushCardBtnClicked(){\n        console.log(\"出牌！\")\n        console.log(this.pushcardVo);\n        console.log(JSON.stringify(this.pushcardVo));\n        this.pushcardVo.curCardList.length = 0;\n        \n        let cards = Array.from(this.cardSet);\n        cards.sort((a, b) => a - b);\n        console.log(\"eee:\",cards);\n        for(let i of cards){\n            let cardName = \"card\" + i;\n            let cardNode = this.pokerView.getChildByName(cardName);\n            let sp = cardNode.getComponent(Sprite);\n            let spf = sp.spriteFrame;\n            let cardValue = spf.name;\n            this.pushcardVo.curCardList.push(Number(cardValue));\n        }\n        this.pushcardVo.curSeat = globalThis._userInfo.room_seat;\n        globalThis._BZDClient.sendMessage(\"pushCards\",{pushCardsInfo: JSON.stringify(this.pushcardVo)});\n        \n    }\n\n    onPushCards(data){\n        this.pushcardVo = data.pushCardsInfo;\n        let curSeat = globalThis._userInfo.room_seat;\n        let isRight: boolean = data.isRight;\n        //出牌正确\n        if(isRight){\n            //是我出的牌\n            if(curSeat == this.pushcardVo.preSeat){\n                let length = this.cardSet.size;\n                let d_x = 30;\n                let x = -70 - d_x * (length / 2);\n                let cards = Array.from(this.cardSet);\n                cards.sort((a, b) => a - b);\n                for(let i of cards){\n                    let cardName = \"card\" + i;\n                    let cardNode = this.pokerView.getChildByName(cardName);\n                    tween(cardNode).to(0.8,{position: new Vec3(x,90,0)}).start();\n                    x += d_x;\n                }\n                // this.cardSet.clear();\n                this.passBtn.active = false;\n                this.pushCardBtn.active = false;\n            }\n            \n            //不是我出的牌，将对应出牌位置更新\n            else{\n                //先更新出牌位置信息(将牌型展出)，到下一家出牌\n                let seat = (this.pushcardVo.preSeat - curSeat + 4) % 4;\n                this.cleanPushCards(seat);\n                if(this.pushcardVo.preSeat == this.pushcardVo.prePushSeat){\n                    let pushCardsView = this.pushCardsView[seat];\n                    let cardList = this.pushcardVo.preCardList;\n                    for(let i = 0; i < cardList.length; i++){\n                        let pk = this.pokerAtlas.getSpriteFrame(cardList[i]+\"\");\n                        let cardName = \"card\" + i;\n                        let cardNode = pushCardsView.getChildByName(cardName);\n                        let sp = cardNode.getComponent(Sprite);\n                        sp.spriteFrame = pk;\n                        cardNode.active = true;\n                    }\n                }else {\n                    this.passLable[seat].active = true;\n                }\n                \n                //如果下家是我\n                if((this.pushcardVo.preSeat + 1) % 4 == curSeat){\n                    for(let i of this.cardSet){\n                        let cardName = \"card\" + i;\n                        let cardNode = this.pokerView.getChildByName(cardName);\n                        cardNode.active = false;\n                    }\n                    this.cardSet.clear();\n                    this.cleanPushCards(0);\n                    this.showPushCardsBtn();\n                }\n            }\n            this.paiPoints.string = \"牌面积分:\" + this.pushcardVo.points;\n        }\n        //出牌不正确\n        else {\n            if(curSeat == this.pushcardVo.curSeat){\n                //是我出的牌\n                console.log(\"不能这样出牌！\");\n            }\n            else {\n                //不是我出的牌，不用管\n            }\n        }\n    }\n    showPushCardsBtn() {\n        if(globalThis._userInfo.room_seat == this.pushcardVo.prePushSeat)\n            this.passBtn.active = false;\n        else \n            this.passBtn.active = true;\n        this.pushCardBtn.active = true;\n    }\n\n    onPassBtnClicked(){\n        this.passBtn.active = false;\n        this.pushCardBtn.active = false;\n        this.passLable[0].active = true;\n        this.pushcardVo.curSeat = globalThis._userInfo.room_seat;\n        this.cleanCardSet();\n        globalThis._BZDClient.sendMessage(\"passCards\",{pushCardsInfo: JSON.stringify(this.pushcardVo)});\n    }\n\n    cleanCardSet(){\n        for(let arg of this.cardSet){\n            let cardName = \"card\" + arg;\n            let cardNode = this.pokerView.getChildByName(cardName);\n            let p = cardNode.getPosition()\n            this.cardSet.delete(arg);\n            p.y -= 30;\n            cardNode.setPosition(p);\n        }\n    }\n\n    cleanPushCards(i){\n        let pcv = this.pushCardsView[i];\n        pcv.active = true;\n        for(let i = 0; i < 27; i++){\n            let cardName = \"card\" + i;\n            let cardNode = pcv.getChildByName(cardName);\n            // let sp = cardNode.getComponent(Sprite);\n            // sp.spriteFrame = null;\n            cardNode.active = false;\n        }\n        this.passLable[i].active = false;\n    }\n}\n\n\n"]}