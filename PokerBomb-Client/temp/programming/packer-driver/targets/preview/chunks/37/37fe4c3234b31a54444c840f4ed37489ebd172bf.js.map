{"version":3,"sources":["file:///D:/Documents/OneDrive/%E6%A1%8C%E9%9D%A2/%E5%85%B6%E4%BB%96%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%AF%95%E4%B8%9A%E8%AE%BE%E8%AE%A1/PokerBomb/PokerBomb-Client/assets/Script/games/bazhadan/BZDSceneMgt.ts"],"names":["_decorator","Component","Node","Label","SpriteAtlas","Sprite","director","tween","Vec3","PushCardVo","BZDSoundMgt","ccclass","property","BZDSceneMgt","cardList","cardSet","Set","pushcardVo","promptInfo","index","start","init","console","log","globalThis","_eventtarget","on","onRequestRoomInfo","onUserReady","onDealCards","onPushCards","onUpdatePoints","panGameOver","newUserJoinRoom","onPrompt","onPromptBtnClicked","curSeat","_userInfo","room_seat","_BZDClient","sendMessage","pushCardsInfo","JSON","stringify","cleanCardSet","promptCard","data","length","arg","bzdSoundMgt","play","cardName","cardNode","pokerView","getChildByName","p","getPosition","has","delete","y","add","setPosition","seat","newUserInfo","userInfo","updateTheseat","seatName","string","userName","seatTotalPoints","totalPoints","seatJuPoints","juPoints","seatPanPoints","panPoints","readyOk","active","userStatus","status","panOver","info","panGameOverInfo","panGameInfo","panGameInfos","i","label","getComponent","points","teamPoints","total","roomInfo","roomId","gamecount","currentNumbers","gameNumbers","scoreNumbers","updateAllSeats","users","gameRoles","cur","userId","user_id","j","passLable","pushCardsView","bool","readyBtn","cancelReadyBtn","readyNumbers","createUserId","startBtn","userCards","showPushCards","showPoker","q","prePushSeat","pushCardBtn","passBtn","paiPoints","curPoints","mySeat","ready","isReady","onReadyBtnClicked","room_id","onCancelReadyBtnClicked","onStartBtnClicked","onExitRoomBtnClicked","loadScene","cleanPushCards","cards","pushSeat","onloadAtlas","bpk","pokerAtlas","getSpriteFrame","x","z","pk","sp","spriteFrame","to","position","call","onCardClicked","type","onPushCardBtnClicked","curCardList","Array","from","sort","a","b","spf","cardValue","name","push","Number","randomAudioName","random","min","max","Math","floor","arr","idx","isRight","audioName","preSeat","preStatus","size","d_x","preCardList","clear","preUserCards","myStatus","promptBtn","showPushCardsBtn","onPassBtnClicked","pcv","onPanOverPageClosedBtnClicked","playAudioEffect"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,K,OAAAA,K;AAA2CC,MAAAA,W,OAAAA,W;AAA0DC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,Q,OAAAA,Q;AAAUC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,I,OAAAA,I;;AAE3JC,MAAAA,U,iBAAAA,U;;AACAC,MAAAA,W,iBAAAA,W;;;;;;;OAGH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBZ,U;;6BAGjBa,W,WADZF,OAAO,CAAC,aAAD,C,UAGHC,QAAQ,CAACT,KAAD,C,UAERS,QAAQ,CAACT,KAAD,C,UAGRS,QAAQ,CAACT,KAAD,C,UAERS,QAAQ,CAACT,KAAD,C,UAGRS,QAAQ,CAACT,KAAD,C,UAGRS,QAAQ,CAACT,KAAD,C,UAGRS,QAAQ,CAACV,IAAD,C,UAGRU,QAAQ,CAACV,IAAD,C,WAGRU,QAAQ,CAACV,IAAD,C,WAGRU,QAAQ,CAACV,IAAD,C,WAGRU,QAAQ,CAACV,IAAD,C,WAGRU,QAAQ,CAACV,IAAD,C,WAGRU,QAAQ,CAACV,IAAD,C,WAGRU,QAAQ,CAACV,IAAD,C,WAGRU,QAAQ,CAACV,IAAD,C,WAGRU,QAAQ,CAACV,IAAD,C,WAGRU,QAAQ,CAACT,KAAD,C,WAGRS,QAAQ,CAACV,IAAD,C,WAGRU,QAAQ,CAACR,WAAD,C,WAGRQ,QAAQ;AAAA;AAAA,qC,2BA1Db,MACaC,WADb,SACiCZ,SADjC,CAC2C;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,eA6DvCa,QA7DuC;AAAA,eA8DvCC,OA9DuC,GA8DhB,IAAIC,GAAJ,EA9DgB;AAAA,eAgEvCC,UAhEuC;AAAA,eAiEvCC,UAjEuC,GAiE1B,IAjE0B;AAAA,eAkEvCC,KAlEuC,GAkEvB,CAlEuB;AAAA;;AAqEvCC,QAAAA,KAAK,GAAG;AACJ,eAAKC,IAAL;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAD,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACH;;AAEOF,QAAAA,IAAI,GAAE;AACV,eAAKJ,UAAL,GAAkB;AAAA;AAAA,yCAAlB;;AACAO,UAAAA,UAAU,CAACC,YAAX,CAAwBC,EAAxB,CAA2B,iBAA3B,EAA8C,KAAKC,iBAAnD,EAAsE,IAAtE;;AACAH,UAAAA,UAAU,CAACC,YAAX,CAAwBC,EAAxB,CAA2B,WAA3B,EAAwC,KAAKE,WAA7C,EAA0D,IAA1D;;AACAJ,UAAAA,UAAU,CAACC,YAAX,CAAwBC,EAAxB,CAA2B,WAA3B,EAAwC,KAAKG,WAA7C,EAA0D,IAA1D;;AACAL,UAAAA,UAAU,CAACC,YAAX,CAAwBC,EAAxB,CAA2B,WAA3B,EAAwC,KAAKI,WAA7C,EAA0D,IAA1D;;AACAN,UAAAA,UAAU,CAACC,YAAX,CAAwBC,EAAxB,CAA2B,cAA3B,EAA2C,KAAKK,cAAhD,EAAgE,IAAhE;;AACAP,UAAAA,UAAU,CAACC,YAAX,CAAwBC,EAAxB,CAA2B,aAA3B,EAA0C,KAAKM,WAA/C,EAA4D,IAA5D;;AACAR,UAAAA,UAAU,CAACC,YAAX,CAAwBC,EAAxB,CAA2B,iBAA3B,EAA8C,KAAKO,eAAnD,EAAoE,IAApE;;AACAT,UAAAA,UAAU,CAACC,YAAX,CAAwBC,EAAxB,CAA2B,QAA3B,EAAqC,KAAKQ,QAA1C,EAAoD,IAApD;AACH;;AACDC,QAAAA,kBAAkB,GAAE;AAChB,cAAG,KAAKjB,UAAL,IAAmB,IAAtB,EAA2B;AACvB,iBAAKD,UAAL,CAAgBmB,OAAhB,GAA0BZ,UAAU,CAACa,SAAX,CAAqBC,SAA/C;;AACAd,YAAAA,UAAU,CAACe,UAAX,CAAsBC,WAAtB,CAAkC,QAAlC,EAA2C;AAACC,cAAAA,aAAa,EAAEC,IAAI,CAACC,SAAL,CAAe,KAAK1B,UAApB;AAAhB,aAA3C;AACH,WAHD,MAGM;AACF,iBAAK2B,YAAL;AACA,iBAAKC,UAAL;AACH;AACJ;;AACDX,QAAAA,QAAQ,CAACY,IAAD,EAAM;AACV,eAAK5B,UAAL,GAAkB4B,IAAI,CAAC5B,UAAvB;AACA,eAAK2B,UAAL;AACH;;AACDA,QAAAA,UAAU,GAAE;AACR,cAAG,KAAK3B,UAAL,CAAgB6B,MAAhB,IAA0B,CAA7B,EAA+B;AAC3BzB,YAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACA;AACH;;AACD,cAAG,KAAKJ,KAAL,IAAc,KAAKD,UAAL,CAAgB6B,MAAjC,EAAwC,KAAK5B,KAAL,GAAa,CAAb;AACxC,cAAIL,QAAiB,GAAG,KAAKI,UAAL,CAAgB,KAAKC,KAArB,CAAxB;;AACA,eAAI,IAAI6B,GAAR,IAAelC,QAAf,EAAwB;AACpB,iBAAKmC,WAAL,CAAiBC,IAAjB,CAAsB,gBAAtB;AACA,gBAAIC,QAAQ,GAAG,SAASH,GAAxB;AACA,gBAAII,QAAQ,GAAG,KAAKC,SAAL,CAAeC,cAAf,CAA8BH,QAA9B,CAAf;AAEA,gBAAII,CAAC,GAAGH,QAAQ,CAACI,WAAT,EAAR;;AACA,gBAAG,KAAKzC,OAAL,CAAa0C,GAAb,CAAiBT,GAAjB,CAAH,EAAyB;AACrB,mBAAKjC,OAAL,CAAa2C,MAAb,CAAoBV,GAApB;AACAO,cAAAA,CAAC,CAACI,CAAF,IAAO,EAAP;AACH,aAHD,MAGM;AACF,mBAAK5C,OAAL,CAAa6C,GAAb,CAAiBZ,GAAjB;AACAO,cAAAA,CAAC,CAACI,CAAF,IAAO,EAAP;AACH;;AACDP,YAAAA,QAAQ,CAACS,WAAT,CAAqBN,CAArB;AACH;;AACD,eAAKpC,KAAL;AACH;;AACDc,QAAAA,eAAe,CAACa,IAAD,EAAO;AAClB,cAAIgB,IAAI,GAAGhB,IAAI,CAACiB,WAAL,CAAiBD,IAA5B;AACA,cAAIE,QAAQ,GAAGlB,IAAI,CAACiB,WAAL,CAAiBC,QAAhC;AACA,eAAKC,aAAL,CAAmBH,IAAnB,EAAyBE,QAAzB;AACH;;AACDC,QAAAA,aAAa,CAACH,IAAD,EAAYE,QAAZ,EAA2B;AACpC,cAAGF,IAAI,IAAItC,UAAU,CAACa,SAAX,CAAqBC,SAAhC,EAA0C;AAC1CwB,UAAAA,IAAI,GAAG,CAACA,IAAI,GAAGtC,UAAU,CAACa,SAAX,CAAqBC,SAA5B,GAAwC,CAAzC,IAA8C,CAArD;AACA,eAAK4B,QAAL,CAAcJ,IAAd,EAAoBK,MAApB,GAA6BH,QAAQ,CAACI,QAAtC;AACA,eAAKC,eAAL,CAAqBP,IAArB,EAA2BK,MAA3B,GAAoC,QAAQH,QAAQ,CAACM,WAArD;AACA,eAAKC,YAAL,CAAkBT,IAAlB,EAAwBK,MAAxB,GAAiC,OAAOH,QAAQ,CAACQ,QAAjD;AACA,eAAKC,aAAL,CAAmBX,IAAnB,EAAyBK,MAAzB,GAAkC,OAAOH,QAAQ,CAACU,SAAlD;AACA,eAAKC,OAAL,CAAab,IAAb,EAAmBc,MAAnB,GAA6BZ,QAAQ,CAACa,UAAT,CAAoBC,MAApB,IAA8B,OAA3D;AACH;;AACD9C,QAAAA,WAAW,CAACc,IAAD,EAAO;AACd,eAAKiC,OAAL,CAAaH,MAAb,GAAsB,IAAtB;AACA,cAAII,IAAI,GAAGlC,IAAI,CAACmC,eAAhB;AACA,cAAIC,WAAW,GAAGF,IAAI,CAACG,YAAvB;AACA,cAAIC,CAAC,GAAG5D,UAAU,CAACa,SAAX,CAAqBC,SAArB,GAAiC,CAAzC;AACA,cAAI+C,KAAK,GAAG,KAAKN,OAAL,CAAazB,cAAb,CAA4B,KAA5B,EAAmCA,cAAnC,CAAkD,QAAlD,EAA4DgC,YAA5D,CAAyEnF,KAAzE,CAAZ;AACAkF,UAAAA,KAAK,CAAClB,MAAN,GAAe,UAAUe,WAAW,CAACE,CAAD,CAAX,CAAeG,MAAzB,GAAkC,SAAlC,GAA8CL,WAAW,CAACE,CAAD,CAAX,CAAeI,UAA7D,GACb,OADa,GACHN,WAAW,CAACE,CAAD,CAAX,CAAeK,KADZ,GACoB,OADpB,GAC8BP,WAAW,CAACE,CAAD,CAAX,CAAeZ,QAD5D;AAGAY,UAAAA,CAAC,GAAG,CAACA,CAAC,GAAG,CAAL,IAAU,CAAd;AACAC,UAAAA,KAAK,GAAG,KAAKN,OAAL,CAAazB,cAAb,CAA4B,KAA5B,EAAmCA,cAAnC,CAAkD,QAAlD,EAA4DgC,YAA5D,CAAyEnF,KAAzE,CAAR;AACAkF,UAAAA,KAAK,CAAClB,MAAN,GAAe,UAAUe,WAAW,CAACE,CAAD,CAAX,CAAeG,MAAzB,GAAkC,SAAlC,GAA8CL,WAAW,CAACE,CAAD,CAAX,CAAeI,UAA7D,GACb,OADa,GACHN,WAAW,CAACE,CAAD,CAAX,CAAeK,KADZ,GACoB,OADpB,GAC8BP,WAAW,CAACE,CAAD,CAAX,CAAeZ,QAD5D;AAEH;;AACDzC,QAAAA,cAAc,CAACe,IAAD,EAAO;AACjB,cAAIgB,IAAI,GAAG,CAAChB,IAAI,CAACgB,IAAL,GAAYtC,UAAU,CAACa,SAAX,CAAqBC,SAAjC,GAA6C,CAA9C,IAAmD,CAA9D;AACA,cAAIoC,SAAS,GAAG5B,IAAI,CAAC4B,SAArB;AACA,eAAKD,aAAL,CAAmBX,IAAnB,EAAyBK,MAAzB,GAAkC,OAAOO,SAAzC;AACA,eAAKD,aAAL,CAAmB,CAACX,IAAI,GAAG,CAAR,IAAa,CAAhC,EAAmCK,MAAnC,GAA4C,OAAOO,SAAnD;AACH;;AAGD/C,QAAAA,iBAAiB,CAACmB,IAAD,EAAM;AACnB,cAAI4C,QAAQ,GAAG5C,IAAI,CAAC4C,QAApB;AACA,eAAKC,MAAL,CAAYxB,MAAZ,GAAqBuB,QAAQ,CAACC,MAA9B;AACA,eAAKC,SAAL,CAAezB,MAAf,GAAwBuB,QAAQ,CAACG,cAAT,GAA0B,GAA1B,GAAgCH,QAAQ,CAACI,WAAzC,GAAuD,IAAvD,GAA8DJ,QAAQ,CAACK,YAAvE,GAAsF,GAA9G;AACA,eAAKC,cAAL,CAAoBN,QAApB;AACH;;AAEDM,QAAAA,cAAc,CAACN,QAAD,EAAU;AACpB,eAAKrC,SAAL,CAAeuB,MAAf,GAAwB,KAAxB;AACA,cAAIqB,KAAiB,GAAGP,QAAQ,CAACQ,SAAjC,CAFoB,CAGpB;;AACA,cAAIC,GAAG,GAAG,CAAV;;AACA,eAAI,IAAIf,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,CAAnB,EAAsBA,CAAC,EAAvB,EAA0B;AACtB,gBAAGa,KAAK,CAACb,CAAD,CAAL,IAAY,IAAf,EAAoB;AAChB;AACH;;AACD,gBAAGa,KAAK,CAACb,CAAD,CAAL,CAASgB,MAAT,IAAmB5E,UAAU,CAACa,SAAX,CAAqBgE,OAA3C,EAAmD;AAC/CF,cAAAA,GAAG,GAAGf,CAAN;AACA;AACH;AACJ;;AACD5D,UAAAA,UAAU,CAACa,SAAX,CAAqBC,SAArB,GAAiC6D,GAAjC,CAdoB,CAepB;;AACA,eAAI,IAAIf,EAAC,GAAG,CAAR,EAAWkB,CAAC,GAAGH,GAAnB,EAAwBf,EAAC,GAAG,CAA5B,EAA+BA,EAAC,IAAIkB,CAAC,EAArC,EAAwC;AACpC,gBAAGA,CAAC,IAAI,CAAR,EAAUA,CAAC,IAAI,CAAL;AACV,gBAAGL,KAAK,CAACK,CAAD,CAAL,IAAY,IAAf,EAAoB;AACpB,iBAAKpC,QAAL,CAAckB,EAAd,EAAiBjB,MAAjB,GAA0B8B,KAAK,CAACK,CAAD,CAAL,CAASlC,QAAnC;AACA,iBAAKC,eAAL,CAAqBe,EAArB,EAAwBjB,MAAxB,GAAiC,QAAQ8B,KAAK,CAACK,CAAD,CAAL,CAAShC,WAAlD;AACA,iBAAKC,YAAL,CAAkBa,EAAlB,EAAqBjB,MAArB,GAA8B,OAAO8B,KAAK,CAACK,CAAD,CAAL,CAAS9B,QAA9C;AACA,iBAAKC,aAAL,CAAmBW,EAAnB,EAAsBjB,MAAtB,GAA+B,OAAO8B,KAAK,CAACK,CAAD,CAAL,CAAS5B,SAA/C;AACA,iBAAKC,OAAL,CAAaS,EAAb,EAAgBR,MAAhB,GAA0BqB,KAAK,CAACK,CAAD,CAAL,CAASzB,UAAT,CAAoBC,MAApB,IAA8B,OAAxD;AACA,iBAAKyB,SAAL,CAAenB,EAAf,EAAkBR,MAAlB,GAA2B,KAA3B;AACH;;AACD,cAAIE,MAAM,GAAGmB,KAAK,CAAC,CAAD,CAAL,CAASpB,UAAT,CAAoBC,MAAjC,CA1BoB,CA2BpB;;AACA,cAAGA,MAAM,IAAI,SAAV,IAAuBA,MAAM,IAAI,OAApC,EAA4C;AACxC,iBAAI,IAAIM,GAAC,GAAG,CAAR,EAAWkB,EAAC,GAAGH,GAAnB,EAAwBf,GAAC,GAAG,CAA5B,EAA+BA,GAAC,IAAIkB,EAAC,EAArC,EAAwC;AACpC,mBAAKE,aAAL,CAAmBpB,GAAnB,EAAsBR,MAAtB,GAA+B,KAA/B;AACA,kBAAG0B,EAAC,IAAI,CAAR,EAAUA,EAAC,IAAI,CAAL;AACV,kBAAGL,KAAK,CAACK,EAAD,CAAL,IAAY,IAAf,EAAoB;;AACpB,kBAAIG,KAAI,GAAGR,KAAK,CAACK,EAAD,CAAL,CAASzB,UAAT,CAAoBC,MAApB,IAA8B,OAAzC;;AACA,mBAAKH,OAAL,CAAaS,GAAb,EAAgBR,MAAhB,GAAyB6B,KAAzB;AACH;;AACD,gBAAIA,IAAI,GAAGR,KAAK,CAACE,GAAD,CAAL,CAAWtB,UAAX,CAAsBC,MAAtB,IAAgC,OAA3C;AACA,iBAAK4B,QAAL,CAAc9B,MAAd,GAAuB,CAAC6B,IAAxB;AACA,iBAAKE,cAAL,CAAoB/B,MAApB,GAA6B6B,IAA7B;AACA,gBAAGf,QAAQ,CAACkB,YAAT,IAAyB,CAAzB,IAA8BpF,UAAU,CAACa,SAAX,CAAqBgE,OAArB,IAAgCX,QAAQ,CAACmB,YAA1E,EAAuF,KAAKC,QAAL,CAAclC,MAAd,GAAuB,IAAvB,CAAvF,KACK,KAAKkC,QAAL,CAAclC,MAAd,GAAuB,KAAvB;AACR,WAbD,MAaM;AACF;AACA;AACA,iBAAK9D,QAAL,GAAgBmF,KAAK,CAACE,GAAD,CAAL,CAAWY,SAA3B;AACA,gBAAIN,MAAI,GAAG,IAAX;;AACA,iBAAI,IAAIrB,GAAC,GAAG,CAAR,EAAWkB,GAAC,GAAGH,GAAnB,EAAwBf,GAAC,GAAG,CAA5B,EAA+BA,GAAC,IAAIkB,GAAC,EAArC,EAAwC;AACpC,kBAAGA,GAAC,IAAI,CAAR,EAAUA,GAAC,IAAI,CAAL;AACV,kBAAIxB,OAAM,GAAGmB,KAAK,CAACK,GAAD,CAAL,CAASzB,UAAT,CAAoBC,MAAjC;;AACA,kBAAGA,OAAM,IAAI,QAAb,EAAsB;AAClB,oBAAIhE,QAAQ,GAAGmF,KAAK,CAACK,GAAD,CAAL,CAASzB,UAAT,CAAoB/B,IAAnC;AACA,qBAAKkE,aAAL,CAAmB5B,GAAnB,EAAsBtE,QAAtB;AACA2F,gBAAAA,MAAI,GAAG,KAAP;AACH,eAJD,MAIM,IAAG3B,OAAM,IAAI,SAAb,EAAuB;AACzB;AACA,qBAAKmC,SAAL,CAAeX,GAAf;;AACA,oBAAGA,GAAC,IAAIH,GAAR,EAAY;AACR,uBAAI,IAAI5C,CAAC,GAAG,CAAR,EAAW2D,CAAC,GAAGf,GAAnB,EAAwB5C,CAAC,GAAG,CAA5B,EAA+BA,CAAC,IAAI2D,CAAC,EAArC,EAAwC;AACpC,wBAAGA,CAAC,GAAG,CAAP,EAASA,CAAC,IAAI,CAAL;;AACT,wBAAGjB,KAAK,CAACiB,CAAD,CAAL,CAASrC,UAAT,CAAoBC,MAApB,IAA8B,QAAjC,EAA0C;AACtC,2BAAK7D,UAAL,CAAgBkG,WAAhB,GAA8BD,CAA9B;AACA;AACH;AACJ;AACJ;AACJ,eAZK,MAYA,IAAGpC,OAAM,IAAI,MAAb,EAAoB;AACtB,qBAAKyB,SAAL,CAAenB,GAAf,EAAkBR,MAAlB,GAA2B,IAA3B;AACH,eAFK,MAEA,IAAGE,OAAM,IAAI,KAAb,EAAmB,CACrB;AACH;AACJ;;AACD,gBAAGmB,KAAK,CAACE,GAAD,CAAL,CAAWtB,UAAX,CAAsBC,MAAtB,IAAgC,SAAnC,EAA6C;AACzC,mBAAKsC,WAAL,CAAiBxC,MAAjB,GAA0B,IAA1B;AACA,mBAAKyC,OAAL,CAAazC,MAAb,GAAsB6B,MAAtB;AACH;;AACD,iBAAKa,SAAL,CAAenD,MAAf,GAAwB,UAAUuB,QAAQ,CAAC6B,SAA3C;AACH;AACJ;;AAED3F,QAAAA,WAAW,CAACkB,IAAD,EAAM;AACb,cAAI0E,MAAM,GAAGhG,UAAU,CAACa,SAAX,CAAqBC,SAAlC;AACA,cAAGQ,IAAI,CAAC8D,YAAL,IAAqB,CAArB,IAA0BpF,UAAU,CAACa,SAAX,CAAqBgE,OAArB,IAAgCvD,IAAI,CAAC+D,YAAlE,EAA+E,KAAKC,QAAL,CAAclC,MAAd,GAAuB,IAAvB,CAA/E,KACK,KAAKkC,QAAL,CAAclC,MAAd,GAAuB,KAAvB;AACL,cAAId,IAAI,GAAGhB,IAAI,CAACgB,IAAhB;AACA,cAAI2D,KAAa,GAAI3E,IAAI,CAAC4E,OAAL,IAAgB,CAArC;AACA,eAAK/C,OAAL,CAAa,CAACb,IAAI,GAAG0D,MAAP,GAAgB,CAAjB,IAAsB,CAAnC,EAAsC5C,MAAtC,GAA+C6C,KAA/C;AAEH;;AACDE,QAAAA,iBAAiB,GAAE;AACf,eAAK1E,WAAL,CAAiBC,IAAjB,CAAsB,QAAtB;AACA,eAAKwD,QAAL,CAAc9B,MAAd,GAAuB,KAAvB;AACA,eAAK+B,cAAL,CAAoB/B,MAApB,GAA6B,IAA7B;;AACApD,UAAAA,UAAU,CAACe,UAAX,CAAsBC,WAAtB,CAAkC,WAAlC,EAA8C;AAACsB,YAAAA,IAAI,EAACtC,UAAU,CAACa,SAAX,CAAqBC,SAA3B;AAAsCoF,YAAAA,OAAO,EAAE,CAA/C;AAAkD/B,YAAAA,MAAM,EAACnE,UAAU,CAACa,SAAX,CAAqBuF;AAA9E,WAA9C;AACH;;AAEDC,QAAAA,uBAAuB,GAAE;AACrB,eAAK5E,WAAL,CAAiBC,IAAjB,CAAsB,QAAtB;AACA,eAAKwD,QAAL,CAAc9B,MAAd,GAAuB,IAAvB;AACA,eAAK+B,cAAL,CAAoB/B,MAApB,GAA6B,KAA7B;;AACApD,UAAAA,UAAU,CAACe,UAAX,CAAsBC,WAAtB,CAAkC,WAAlC,EAA8C;AAACsB,YAAAA,IAAI,EAACtC,UAAU,CAACa,SAAX,CAAqBC,SAA3B;AAAsCoF,YAAAA,OAAO,EAAE,CAAC,CAAhD;AAAmD/B,YAAAA,MAAM,EAACnE,UAAU,CAACa,SAAX,CAAqBuF;AAA/E,WAA9C;AACH;;AAEDE,QAAAA,iBAAiB,GAAE;AACf,eAAK7E,WAAL,CAAiBC,IAAjB,CAAsB,QAAtB;;AACA1B,UAAAA,UAAU,CAACe,UAAX,CAAsBC,WAAtB,CAAkC,WAAlC,EAA8C,EAA9C;AACH;;AAEDuF,QAAAA,oBAAoB,GAAE;AAClB,eAAK9E,WAAL,CAAiBC,IAAjB,CAAsB,QAAtB;AACA5C,UAAAA,QAAQ,CAAC0H,SAAT,CAAmB,WAAnB;AACH;;AAEDnG,QAAAA,WAAW,CAACiB,IAAD,EAAM;AACbxB,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBuB,IAApB;AACA,eAAKG,WAAL,CAAiBC,IAAjB,CAAsB,UAAtB;AAEA,eAAK4D,QAAL,CAAclC,MAAd,GAAuB,KAAvB;AACA,eAAK8B,QAAL,CAAc9B,MAAd,GAAuB,KAAvB;AACA,eAAK+B,cAAL,CAAoB/B,MAApB,GAA6B,KAA7B,CANa,CAOb;;AACA,eAAI,IAAIQ,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,CAAnB,EAAsBA,CAAC,EAAvB,EAA0B;AACtB,iBAAK6C,cAAL,CAAoB7C,CAApB;AACH;;AACD,eAAI,IAAIA,GAAC,GAAG,CAAZ,EAAeA,GAAC,GAAG,CAAnB,EAAsBA,GAAC,EAAvB,EAA0B;AACtB,iBAAKT,OAAL,CAAaS,GAAb,EAAgBR,MAAhB,GAAyB,KAAzB;AACH;;AACD,cAAIsD,KAAK,GAAGpF,IAAI,CAAChC,QAAL,CAAcU,UAAU,CAACa,SAAX,CAAqBC,SAAnC,CAAZ;AACA,cAAI6F,QAAQ,GAAGrF,IAAI,CAACqF,QAApB;AACA,eAAKrH,QAAL,GAAgBoH,KAAhB;AACA,eAAKjH,UAAL,CAAgBkG,WAAhB,GAA8BgB,QAA9B,CAjBa,CAkBb;;AACA,eAAKlB,SAAL,CAAekB,QAAf;AACH;;AAEDC,QAAAA,WAAW,CAAC9B,CAAD,EAAI;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,eAAKW,SAAL,CAAeX,CAAf;AACH;;AACDW,QAAAA,SAAS,CAACX,CAAD,EAAI;AAAA;;AACT,eAAKjD,SAAL,CAAeuB,MAAf,GAAwB,IAAxB;AACA,eAAKyC,OAAL,CAAazC,MAAb,GAAsB,KAAtB;AACA,eAAKwC,WAAL,CAAiBxC,MAAjB,GAA0B,KAA1B;AACA,cAAIyD,GAAG,GAAG,KAAKC,UAAL,CAAgBC,cAAhB,CAA+B,GAA/B,CAAV;AACA,cAAIC,CAAC,GAAG,CAAC,GAAT;AAAA,cAAc7E,CAAC,GAAG,CAAC,EAAnB;AAAA,cAAuB8E,CAAC,GAAG,CAA3B;;AALS,qCAMDrD,CANC;AAOL,gBAAGA,CAAC,IAAI,EAAR,EAAW;AACPzB,cAAAA,CAAC,GAAG,CAAC,GAAL;AACA6E,cAAAA,CAAC,IAAI,GAAL;AACH;;AACD,gBAAIE,EAAE,GAAG,KAAI,CAACJ,UAAL,CAAgBC,cAAhB,CAA+B,KAAI,CAACzH,QAAL,CAAcsE,CAAd,IAAiB,EAAhD,CAAT;;AACA,gBAAIjC,QAAQ,GAAG,SAASiC,CAAxB;;AACA,gBAAIhC,QAAQ,GAAG,KAAI,CAACC,SAAL,CAAeC,cAAf,CAA8BH,QAA9B,CAAf;;AACAC,YAAAA,QAAQ,CAACS,WAAT,CAAqB,IAAIrD,IAAJ,CAAS,CAAT,EAAY,GAAZ,EAAiB,CAAjB,CAArB;AACA4C,YAAAA,QAAQ,CAACwB,MAAT,GAAkB,IAAlB;AACA,gBAAI+D,EAAE,GAAGvF,QAAQ,CAACkC,YAAT,CAAsBjF,MAAtB,CAAT;AACAsI,YAAAA,EAAE,CAACC,WAAH,GAAiBP,GAAjB;AACA9H,YAAAA,KAAK,CAAC6C,QAAD,CAAL,CAAgByF,EAAhB,CAAmB,GAAnB,EAAuB;AAACC,cAAAA,QAAQ,EAAE,IAAItI,IAAJ,CAAS4E,CAAC,GAAC,EAAF,GAAKoD,CAAd,EAAiB7E,CAAjB,EAAoB8E,CAApB;AAAX,aAAvB,EACCM,IADD,CACM,MAAM;AACRJ,cAAAA,EAAE,CAACC,WAAH,GAAiBF,EAAjB;;AACA,kBAAGtD,CAAC,IAAI,EAAR,EAAW;AACP,oBAAG5D,UAAU,CAACa,SAAX,CAAqBC,SAArB,IAAkCgE,CAArC,EAAuC;AACnC,kBAAA,KAAI,CAACc,WAAL,CAAiBxC,MAAjB,GAA0B,IAA1B;;AACA,sBAAGpD,UAAU,CAACa,SAAX,CAAqBC,SAArB,IAAkC,KAAI,CAACrB,UAAL,CAAgBkG,WAArD,EAAiE;AAC7D,oBAAA,KAAI,CAACE,OAAL,CAAazC,MAAb,GAAsB,IAAtB;AACH;AACJ;AACJ;AACJ,aAXD,EAWGxD,KAXH;AAlBK;;AAMT,eAAI,IAAIgE,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,KAAKtE,QAAL,CAAciC,MAAjC,EAAyCqC,CAAC,EAA1C,EAA6C;AAAA,kBAArCA,CAAqC;AAwB5C;AACJ;;AAED4D,QAAAA,aAAa,CAACC,IAAD,EAAMjG,GAAN,EAAU;AACnB,eAAKC,WAAL,CAAiBC,IAAjB,CAAsB,gBAAtB;AACA,cAAIC,QAAQ,GAAG,SAASH,GAAxB;AACA,cAAII,QAAQ,GAAG,KAAKC,SAAL,CAAeC,cAAf,CAA8BH,QAA9B,CAAf;AAEA,cAAII,CAAC,GAAGH,QAAQ,CAACI,WAAT,EAAR;;AACA,cAAG,KAAKzC,OAAL,CAAa0C,GAAb,CAAiBT,GAAjB,CAAH,EAAyB;AACrB,iBAAKjC,OAAL,CAAa2C,MAAb,CAAoBV,GAApB;AACAO,YAAAA,CAAC,CAACI,CAAF,IAAO,EAAP;AACH,WAHD,MAGM;AACF,iBAAK5C,OAAL,CAAa6C,GAAb,CAAiBZ,GAAjB;AACAO,YAAAA,CAAC,CAACI,CAAF,IAAO,EAAP;AACH;;AACDP,UAAAA,QAAQ,CAACS,WAAT,CAAqBN,CAArB;AACH;;AAED2F,QAAAA,oBAAoB,GAAE;AAClB5H,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACAD,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,UAAjB;AACAK,UAAAA,OAAO,CAACC,GAAR,CAAYmB,IAAI,CAACC,SAAL,CAAe,KAAK1B,UAApB,CAAZ;AACA,eAAKA,UAAL,CAAgBkI,WAAhB,CAA4BpG,MAA5B,GAAqC,CAArC;AAEA,cAAImF,KAAK,GAAGkB,KAAK,CAACC,IAAN,CAAW,KAAKtI,OAAhB,CAAZ;AACAmH,UAAAA,KAAK,CAACoB,IAAN,CAAW,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAGC,CAAzB;AACAlI,UAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmB2G,KAAnB;;AACA,eAAI,IAAI9C,CAAR,IAAa8C,KAAb,EAAmB;AACf,gBAAI/E,QAAQ,GAAG,SAASiC,CAAxB;AACA,gBAAIhC,QAAQ,GAAG,KAAKC,SAAL,CAAeC,cAAf,CAA8BH,QAA9B,CAAf;AACA,gBAAIwF,EAAE,GAAGvF,QAAQ,CAACkC,YAAT,CAAsBjF,MAAtB,CAAT;AACA,gBAAIoJ,GAAG,GAAGd,EAAE,CAACC,WAAb;AACA,gBAAIc,SAAS,GAAGD,GAAG,CAACE,IAApB;AACA,iBAAK1I,UAAL,CAAgBkI,WAAhB,CAA4BS,IAA5B,CAAiCC,MAAM,CAACH,SAAD,CAAvC;AACH;;AACD,eAAKzI,UAAL,CAAgBmB,OAAhB,GAA0BZ,UAAU,CAACa,SAAX,CAAqBC,SAA/C;;AACAd,UAAAA,UAAU,CAACe,UAAX,CAAsBC,WAAtB,CAAkC,WAAlC,EAA8C;AAACC,YAAAA,aAAa,EAAEC,IAAI,CAACC,SAAL,CAAe,KAAK1B,UAApB;AAAhB,WAA9C;AAEH;;AAED6I,QAAAA,eAAe,CAACb,IAAD,EAAM;AACjB,cAAMc,MAAM,GAAG,CAACC,GAAD,EAASC,GAAT,KAAqBC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACH,MAAL,MAAiBE,GAAG,GAAGD,GAAN,GAAY,CAA7B,IAAkCA,GAA7C,CAApC;;AACA,cAAII,GAAO,GAAG,CAAC,QAAD,EAAU,MAAV,CAAd;AAEA,cAAIC,GAAG,GAAGN,MAAM,CAAE,CAAF,EAAI,CAAJ,CAAhB;;AACA,cAAGd,IAAI,IAAI,OAAX,EAAmB;AACf,gBAAIoB,IAAG,GAAGN,MAAM,CAAC,CAAD,EAAI,CAAJ,CAAhB;;AACAd,YAAAA,IAAI,IAAIoB,IAAR;AACH;;AACD,iBAAOD,GAAG,CAACC,GAAD,CAAH,GAAWpB,IAAlB;AACH;;AACDnH,QAAAA,WAAW,CAACgB,IAAD,EAAM;AACb,eAAK7B,UAAL,GAAkB6B,IAAI,CAACL,aAAvB;AACA,cAAIL,OAAO,GAAGZ,UAAU,CAACa,SAAX,CAAqBC,SAAnC;AACA,cAAIgI,OAAgB,GAAGxH,IAAI,CAACwH,OAA5B;AACA,cAAIC,SAAS,GAAG,KAAKT,eAAL,CAAqB,KAAK7I,UAAL,CAAgBgI,IAArC,CAAhB,CAJa,CAKb;;AACA,cAAGqB,OAAH,EAAW;AACP,iBAAKrH,WAAL,CAAiBC,IAAjB,CAAsBqH,SAAtB,EADO,CAEP;;AACA,gBAAGnI,OAAO,IAAI,KAAKnB,UAAL,CAAgBuJ,OAA9B,EAAsC;AAClC,kBAAG,KAAKvJ,UAAL,CAAgBwJ,SAAhB,IAA6B,QAAhC,EAAyC;AACrC,qBAAKxH,WAAL,CAAiBC,IAAjB,CAAsB,cAAtB;AACA,oBAAIH,MAAM,GAAG,KAAKhC,OAAL,CAAa2J,IAA1B;AACA,oBAAIC,GAAG,GAAG,EAAV;AACA,oBAAInC,CAAC,GAAG,CAAC,EAAD,GAAMmC,GAAG,IAAI5H,MAAM,GAAG,CAAb,CAAjB;AACA,oBAAImF,KAAK,GAAGkB,KAAK,CAACC,IAAN,CAAW,KAAKtI,OAAhB,CAAZ;AACAmH,gBAAAA,KAAK,CAACoB,IAAN,CAAW,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAGC,CAAzB;;AACA,qBAAI,IAAIpE,CAAR,IAAa8C,KAAb,EAAmB;AACf;AACA,sBAAI/E,QAAQ,GAAG,SAASiC,CAAxB;AACA,sBAAIhC,QAAQ,GAAG,KAAKC,SAAL,CAAeC,cAAf,CAA8BH,QAA9B,CAAf;AACAC,kBAAAA,QAAQ,CAACwB,MAAT,GAAkB,KAAlB,CAJe,CAKf;AACA;AACH;;AACD,oBAAI9D,QAAQ,GAAG,KAAKG,UAAL,CAAgB2J,WAA/B;AACA,qBAAK5D,aAAL,CAAmB,CAAnB,EAAsBlG,QAAtB;AACA,qBAAKC,OAAL,CAAa8J,KAAb,GAjBqC,CAkBrC;;AACArC,gBAAAA,CAAC,GAAG,CAAC,GAAL;AAAU,oBAAI7E,CAAC,GAAG,CAAC,EAAT;AAAA,oBAAa8E,CAAC,GAAG,CAAjB;AACV,qBAAK3H,QAAL,GAAgB,KAAKG,UAAL,CAAgB6J,YAAhC;;AACA,qBAAI,IAAI1F,GAAC,GAAG,CAAZ,EAAeA,GAAC,GAAG,KAAKtE,QAAL,CAAciC,MAAjC,EAAyCqC,GAAC,EAA1C,EAA6C;AACzC,sBAAGA,GAAC,IAAI,EAAR,EAAW;AACPzB,oBAAAA,CAAC,GAAG,CAAC,GAAL;AACA6E,oBAAAA,CAAC,IAAI,GAAL;AACH;;AACD,sBAAIE,EAAE,GAAG,KAAKJ,UAAL,CAAgBC,cAAhB,CAA+B,KAAKzH,QAAL,CAAcsE,GAAd,IAAiB,EAAhD,CAAT;;AACA,sBAAIjC,SAAQ,GAAG,SAASiC,GAAxB;;AACA,sBAAIhC,SAAQ,GAAG,KAAKC,SAAL,CAAeC,cAAf,CAA8BH,SAA9B,CAAf;;AACA,sBAAIwF,EAAE,GAAGvF,SAAQ,CAACkC,YAAT,CAAsBjF,MAAtB,CAAT;;AACAsI,kBAAAA,EAAE,CAACC,WAAH,GAAiBF,EAAjB;;AACAtF,kBAAAA,SAAQ,CAACS,WAAT,CAAqB,IAAIrD,IAAJ,CAAS4E,GAAC,GAAC,EAAF,GAAKoD,CAAd,EAAiB7E,CAAjB,EAAoB8E,CAApB,CAArB;;AACArF,kBAAAA,SAAQ,CAACwB,MAAT,GAAkB,IAAlB;AACH;;AACD,qBAAI,IAAIQ,GAAC,GAAG,KAAKtE,QAAL,CAAciC,MAA1B,EAAkCqC,GAAC,GAAG,EAAtC,EAA0CA,GAAC,EAA3C,EAA8C;AAC1C,sBAAIjC,UAAQ,GAAG,SAASiC,GAAxB;;AACA,sBAAIhC,UAAQ,GAAG,KAAKC,SAAL,CAAeC,cAAf,CAA8BH,UAA9B,CAAf;;AACAC,kBAAAA,UAAQ,CAACwB,MAAT,GAAkB,KAAlB;AACH;;AAED,qBAAKyC,OAAL,CAAazC,MAAb,GAAsB,KAAtB;AACA,qBAAKwC,WAAL,CAAiBxC,MAAjB,GAA0B,KAA1B;AACH,eA1CD,MA0CM,IAAG,KAAK3D,UAAL,CAAgBwJ,SAAhB,IAA6B,MAAhC,EAAuC,CAE5C;AACJ,aA9CD,CAgDA;AAhDA,iBAiDI;AACA;AACA,kBAAI3G,IAAI,GAAG,CAAC,KAAK7C,UAAL,CAAgBuJ,OAAhB,GAA0BpI,OAA1B,GAAoC,CAArC,IAA0C,CAArD;AACA,mBAAK6F,cAAL,CAAoBnE,IAApB;;AACA,kBAAG,KAAK7C,UAAL,CAAgBuJ,OAAhB,IAA2B,KAAKvJ,UAAL,CAAgBkG,WAA9C,EAA0D;AAAC;AACvD,oBAAIrG,SAAQ,GAAG,KAAKG,UAAL,CAAgB2J,WAA/B;AACA,qBAAK5D,aAAL,CAAmBlD,IAAnB,EAAyBhD,SAAzB;AACH,eAHD,MAGM,IAAG,KAAKG,UAAL,CAAgBwJ,SAAhB,IAA6B,MAAhC,EAAuC;AACzC,qBAAKlE,SAAL,CAAezC,IAAf,EAAqBc,MAArB,GAA8B,IAA9B;AACH,eAFK,MAEA,IAAG,KAAK3D,UAAL,CAAgBwJ,SAAhB,IAA6B,KAAhC,EAAsC,CAE3C,CAXD,CAaA;;;AACA,kBAAG,CAAC,KAAKxJ,UAAL,CAAgBuJ,OAAhB,GAA0B,CAA3B,IAAgC,CAAhC,IAAqCpI,OAAxC,EAAgD;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,oBAAG,KAAKnB,UAAL,CAAgB8J,QAAhB,IAA4B,SAA/B,EAAyC;AACrC,uBAAK9C,cAAL,CAAoB,CAApB;;AACA,sBAAGzG,UAAU,CAACa,SAAX,CAAqBC,SAArB,IAAkC,KAAKrB,UAAL,CAAgBkG,WAArD,EAAiE;AACzD,yBAAKE,OAAL,CAAazC,MAAb,GAAsB,KAAtB;AACA,yBAAKoG,SAAL,CAAepG,MAAf,GAAwB,KAAxB;AACH,mBAHL,MAIK;AACD,yBAAKyC,OAAL,CAAazC,MAAb,GAAsB,IAAtB;AACA,yBAAKoG,SAAL,CAAepG,MAAf,GAAwB,IAAxB;AACH;;AACD,uBAAKwC,WAAL,CAAiBxC,MAAjB,GAA0B,IAA1B;AACH,iBAXD,MAWM,IAAG,KAAK3D,UAAL,CAAgB8J,QAAhB,IAA4B,KAA/B,EAAqC;AACvC,uBAAK9J,UAAL,CAAgBmB,OAAhB,GAA0BZ,UAAU,CAACa,SAAX,CAAqBC,SAA/C;;AACAd,kBAAAA,UAAU,CAACe,UAAX,CAAsBC,WAAtB,CAAkC,SAAlC,EAA4C;AAACC,oBAAAA,aAAa,EAAEC,IAAI,CAACC,SAAL,CAAe,KAAK1B,UAApB;AAAhB,mBAA5C;AACH,iBAHK,MAGA,IAAG,KAAKA,UAAL,CAAgB8J,QAAhB,IAA4B,MAA/B,EAAsC;AACxCzJ,kBAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,uBAAKN,UAAL,CAAgBmB,OAAhB,GAA0BZ,UAAU,CAACa,SAAX,CAAqBC,SAA/C;;AACAd,kBAAAA,UAAU,CAACe,UAAX,CAAsBC,WAAtB,CAAkC,aAAlC,EAAgD;AAACC,oBAAAA,aAAa,EAAEC,IAAI,CAACC,SAAL,CAAe,KAAK1B,UAApB;AAAhB,mBAAhD;AACH,iBAJK,MAIA,IAAG,KAAKA,UAAL,CAAgB8J,QAAhB,IAA4B,YAA/B,EAA4C;AAC9C,uBAAK9J,UAAL,CAAgBmB,OAAhB,GAA0BZ,UAAU,CAACa,SAAX,CAAqBC,SAA/C;;AACAd,kBAAAA,UAAU,CAACe,UAAX,CAAsBC,WAAtB,CAAkC,YAAlC,EAA+C;AAACC,oBAAAA,aAAa,EAAEC,IAAI,CAACC,SAAL,CAAe,KAAK1B,UAApB;AAAhB,mBAA/C;AACH;AACJ;AACJ;;AACD,iBAAKqG,SAAL,CAAenD,MAAf,GAAwB,UAAU,KAAKlD,UAAL,CAAgBsE,MAAlD;AACH,WAlGD,CAmGA;AAnGA,eAoGK;AACD,gBAAGnD,OAAO,IAAI,KAAKnB,UAAL,CAAgBmB,OAA9B,EAAsC;AAClC;AACA,mBAAKa,WAAL,CAAiBC,IAAjB,CAAsB,mBAAtB;AACA5B,cAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH,aAJD,MAKK,CACD;AACH;AACJ;AACJ;;AACDyF,QAAAA,aAAa,CAAClD,IAAD,EAAOhD,QAAP,EAAgB;AACzB,cAAI0F,aAAa,GAAG,KAAKA,aAAL,CAAmB1C,IAAnB,CAApB;;AACA,eAAI,IAAIsB,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGtE,QAAQ,CAACiC,MAA5B,EAAoCqC,CAAC,EAArC,EAAwC;AACpC,gBAAIsD,EAAE,GAAG,KAAKJ,UAAL,CAAgBC,cAAhB,CAA+BzH,QAAQ,CAACsE,CAAD,CAAR,GAAY,EAA3C,CAAT;AACA,gBAAIjC,QAAQ,GAAG,SAASiC,CAAxB;AACA,gBAAIhC,QAAQ,GAAGoD,aAAa,CAAClD,cAAd,CAA6BH,QAA7B,CAAf;AACA,gBAAIwF,EAAE,GAAGvF,QAAQ,CAACkC,YAAT,CAAsBjF,MAAtB,CAAT;AACAsI,YAAAA,EAAE,CAACC,WAAH,GAAiBF,EAAjB;AACAtF,YAAAA,QAAQ,CAACwB,MAAT,GAAkB,IAAlB;AACH;AACJ;;AACDqG,QAAAA,gBAAgB,GAAG;AACf3J,UAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAiBC,UAAU,CAACa,SAAX,CAAqBC,SAAtC;AACAhB,UAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAiB,KAAKN,UAAL,CAAgBkG,WAAjC;AACA,cAAG3F,UAAU,CAACa,SAAX,CAAqBC,SAArB,IAAkC,KAAKrB,UAAL,CAAgBkG,WAArD,EACI,KAAKE,OAAL,CAAazC,MAAb,GAAsB,KAAtB,CADJ,KAGI,KAAKyC,OAAL,CAAazC,MAAb,GAAsB,IAAtB;AAEJ,cAAGpD,UAAU,CAACa,SAAX,CAAqBC,SAArB,IAAkC,CAAC,KAAKrB,UAAL,CAAgBuJ,OAAhB,GAA0B,CAA3B,IAAgC,CAArE,EACI,KAAKpD,WAAL,CAAiBxC,MAAjB,GAA0B,IAA1B;AAEJtD,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAK6F,WAAL,CAAiBxC,MAA7B;AACH;;AAEDsG,QAAAA,gBAAgB,GAAE;AACd,eAAK7D,OAAL,CAAazC,MAAb,GAAsB,KAAtB;AACA,eAAKwC,WAAL,CAAiBxC,MAAjB,GAA0B,KAA1B;AACA,eAAK2B,SAAL,CAAe,CAAf,EAAkB3B,MAAlB,GAA2B,IAA3B;AACA,eAAK3D,UAAL,CAAgBmB,OAAhB,GAA0BZ,UAAU,CAACa,SAAX,CAAqBC,SAA/C;AACA,eAAKM,YAAL;;AACApB,UAAAA,UAAU,CAACe,UAAX,CAAsBC,WAAtB,CAAkC,WAAlC,EAA8C;AAACC,YAAAA,aAAa,EAAEC,IAAI,CAACC,SAAL,CAAe,KAAK1B,UAApB;AAAhB,WAA9C;AACH;;AAED2B,QAAAA,YAAY,GAAE;AACV,eAAI,IAAII,GAAR,IAAe,KAAKjC,OAApB,EAA4B;AACxB,gBAAIoC,QAAQ,GAAG,SAASH,GAAxB;AACA,gBAAII,QAAQ,GAAG,KAAKC,SAAL,CAAeC,cAAf,CAA8BH,QAA9B,CAAf;AACA,gBAAII,CAAC,GAAGH,QAAQ,CAACI,WAAT,EAAR;AACA,iBAAKzC,OAAL,CAAa2C,MAAb,CAAoBV,GAApB;AACAO,YAAAA,CAAC,CAACI,CAAF,IAAO,EAAP;AACAP,YAAAA,QAAQ,CAACS,WAAT,CAAqBN,CAArB;AACH;AACJ;;AAED0E,QAAAA,cAAc,CAAC7C,CAAD,EAAG;AACb,cAAI+F,GAAG,GAAG,KAAK3E,aAAL,CAAmBpB,CAAnB,CAAV;AACA+F,UAAAA,GAAG,CAACvG,MAAJ,GAAa,IAAb;;AACA,eAAI,IAAIQ,GAAC,GAAG,CAAZ,EAAeA,GAAC,GAAG,EAAnB,EAAuBA,GAAC,EAAxB,EAA2B;AACvB,gBAAIjC,QAAQ,GAAG,SAASiC,GAAxB;AACA,gBAAIhC,QAAQ,GAAG+H,GAAG,CAAC7H,cAAJ,CAAmBH,QAAnB,CAAf,CAFuB,CAGvB;AACA;;AACAC,YAAAA,QAAQ,CAACwB,MAAT,GAAkB,KAAlB;AACH;;AACD,eAAK2B,SAAL,CAAenB,CAAf,EAAkBR,MAAlB,GAA2B,KAA3B;AACH;;AAEDwG,QAAAA,6BAA6B,GAAE;AAC3B,eAAKnI,WAAL,CAAiBC,IAAjB,CAAsB,QAAtB;AACA,eAAK6B,OAAL,CAAaH,MAAb,GAAsB,KAAtB;AACA,eAAK3D,UAAL,GAAkB;AAAA;AAAA,yCAAlB;;AACAO,UAAAA,UAAU,CAACe,UAAX,CAAsBC,WAAtB,CAAkC,iBAAlC,EAAoD,EAApD;AACH;;AAED6I,QAAAA,eAAe,CAAC1B,IAAD,EAAa;AACxB,eAAK1G,WAAL,CAAiBC,IAAjB,CAAsByG,IAAtB;AACH;;AAjkBsC,O;;;;;;;;;;;;;;;iBAQnB,E;;;;;;;iBAEO,E;;;;;;;iBAGH,E;;;;;;;iBAGC,E;;;;;;;iBAGP,E;;;;;;;iBAGM,E;;;;;;;iBAGJ,E","sourcesContent":["import { _decorator, Component, Node, Label, System, assetManager, AssetManager, SpriteAtlas, Prefab, instantiate, resources, SpriteFrame, Sprite, director, tween, Vec3 } from 'cc';\nimport { GameRole } from '../../common/GameRole';\nimport { PushCardVo } from '../../common/PushCardVo';\nimport { BZDSoundMgt } from './BZDSoundMgt';\nimport { Poker } from './Poker';\nimport { PokerCtr } from './PokerCtr';\nconst { ccclass, property } = _decorator;\n\n@ccclass('BZDSceneMgt')\nexport class BZDSceneMgt extends Component {\n\n    @property(Label)\n    public roomId: Label\n    @property(Label)\n    public gamecount: Label\n\n    @property(Label)\n    seatName: Label[] = [];\n    @property(Label)\n    seatTotalPoints: Label[] = [];\n    \n    @property(Label)\n    seatJuPoints: Label[] = []\n    \n    @property(Label)\n    seatPanPoints: Label[] = []\n    \n    @property(Node)\n    readyOk: Node[] = []\n\n    @property(Node)\n    pushCardsView: Node[] = []\n\n    @property(Node)\n    passLable: Node[] = []\n    \n    @property(Node)\n    readyBtn: Node\n    \n    @property(Node)\n    cancelReadyBtn: Node\n    \n    @property(Node)\n    startBtn: Node\n\n    @property(Node)\n    pokerView: Node\n\n    @property(Node)\n    passBtn: Node\n\n    @property(Node)\n    promptBtn: Node\n\n    @property(Node)\n    pushCardBtn: Node\n\n    @property(Label)\n    paiPoints: Label\n\n    @property(Node)\n    panOver: Node\n\n    @property(SpriteAtlas)\n    pokerAtlas: SpriteAtlas;\n\n    @property(BZDSoundMgt)\n    bzdSoundMgt: BZDSoundMgt\n\n\n    cardList: number[];\n    cardSet: Set<number> = new Set;\n    // pushCardSet: Set<number> = new Set;\n    pushcardVo: PushCardVo\n    promptInfo = null\n    index: number = 0\n\n    \n    start() {\n        this.init();\n        console.log(\"怡怡最美~\");\n        console.log(\"最爱怡怡~\");\n    }\n\n    private init(){\n        this.pushcardVo = new PushCardVo();\n        globalThis._eventtarget.on(\"requestRoomInfo\", this.onRequestRoomInfo, this);\n        globalThis._eventtarget.on(\"userReady\", this.onUserReady, this);\n        globalThis._eventtarget.on(\"dealCards\", this.onDealCards, this);\n        globalThis._eventtarget.on(\"pushCards\", this.onPushCards, this);\n        globalThis._eventtarget.on(\"updatePoints\", this.onUpdatePoints, this);\n        globalThis._eventtarget.on(\"panGameOver\", this.panGameOver, this);\n        globalThis._eventtarget.on(\"newUserJoinRoom\", this.newUserJoinRoom, this);\n        globalThis._eventtarget.on(\"prompt\", this.onPrompt, this);\n    }\n    onPromptBtnClicked(){\n        if(this.promptInfo == null){\n            this.pushcardVo.curSeat = globalThis._userInfo.room_seat;\n            globalThis._BZDClient.sendMessage(\"prompt\",{pushCardsInfo: JSON.stringify(this.pushcardVo)});\n        }else {\n            this.cleanCardSet();\n            this.promptCard();\n        }\n    }\n    onPrompt(data){\n        this.promptInfo = data.promptInfo;\n        this.promptCard();\n    }\n    promptCard(){\n        if(this.promptInfo.length == 0){\n            console.log(\"您没有比上家大的牌！\");\n            return;\n        }\n        if(this.index >= this.promptInfo.length)this.index = 0;\n        let cardList:number[] = this.promptInfo[this.index];\n        for(let arg of cardList){\n            this.bzdSoundMgt.play(\"SpecSelectCard\");\n            let cardName = \"card\" + arg;\n            let cardNode = this.pokerView.getChildByName(cardName);\n            \n            let p = cardNode.getPosition()\n            if(this.cardSet.has(arg)){\n                this.cardSet.delete(arg);\n                p.y -= 30;\n            }else {\n                this.cardSet.add(arg);\n                p.y += 30;\n            }\n            cardNode.setPosition(p);\n        }\n        this.index++;\n    }\n    newUserJoinRoom(data) {\n        let seat = data.newUserInfo.seat;\n        let userInfo = data.newUserInfo.userInfo;\n        this.updateTheseat(seat, userInfo);\n    }\n    updateTheseat(seat: any, userInfo: any) {\n        if(seat == globalThis._userInfo.room_seat)return;\n        seat = (seat - globalThis._userInfo.room_seat + 4) % 4;\n        this.seatName[seat].string = userInfo.userName;\n        this.seatTotalPoints[seat].string = \"总分:\" + userInfo.totalPoints;\n        this.seatJuPoints[seat].string = \"局:\" + userInfo.juPoints;\n        this.seatPanPoints[seat].string = \"盘:\" + userInfo.panPoints;\n        this.readyOk[seat].active = (userInfo.userStatus.status == \"READY\");\n    }\n    panGameOver(data) {\n        this.panOver.active = true;\n        let info = data.panGameOverInfo;\n        let panGameInfo = info.panGameInfos;\n        let i = globalThis._userInfo.room_seat % 2;\n        let label = this.panOver.getChildByName(\"计分板\").getChildByName(\"本队积分详情\").getComponent(Label);\n        label.string = \"牌面积分：\" + panGameInfo[i].points + \"\\n队伍积分：\" + panGameInfo[i].teamPoints \n        + \"\\n总计：\" + panGameInfo[i].total + \"\\n局分：\" + panGameInfo[i].juPoints;\n\n        i = (i + 1) % 2;\n        label = this.panOver.getChildByName(\"计分板\").getChildByName(\"他队积分详情\").getComponent(Label);\n        label.string = \"牌面积分：\" + panGameInfo[i].points + \"\\n队伍积分：\" + panGameInfo[i].teamPoints \n        + \"\\n总计：\" + panGameInfo[i].total + \"\\n局分：\" + panGameInfo[i].juPoints;\n    }\n    onUpdatePoints(data) {\n        let seat = (data.seat - globalThis._userInfo.room_seat + 4) % 4;\n        let panPoints = data.panPoints;\n        this.seatPanPoints[seat].string = \"盘:\" + panPoints;\n        this.seatPanPoints[(seat + 2) % 4].string = \"盘:\" + panPoints;\n    }\n\n    \n    onRequestRoomInfo(data){\n        let roomInfo = data.roomInfo;\n        this.roomId.string = roomInfo.roomId;\n        this.gamecount.string = roomInfo.currentNumbers + \"/\" + roomInfo.gameNumbers + \"局 \" + roomInfo.scoreNumbers + \"分\";\n        this.updateAllSeats(roomInfo);\n    }\n\n    updateAllSeats(roomInfo){\n        this.pokerView.active = false;\n        let users: GameRole[] = roomInfo.gameRoles;\n        //先找到本玩家座位号\n        let cur = 0;\n        for(let i = 0; i < 4; i++){\n            if(users[i] == null){\n                continue;\n            }\n            if(users[i].userId == globalThis._userInfo.user_id){\n                cur = i;\n                break;\n            }\n        }\n        globalThis._userInfo.room_seat = cur;\n        //渲染各座位信息\n        for(let i = 0, j = cur; i < 4; i++, j++){\n            if(j >= 4)j -= 4;\n            if(users[j] == null)continue;\n            this.seatName[i].string = users[j].userName;\n            this.seatTotalPoints[i].string = \"总分:\" + users[j].totalPoints;\n            this.seatJuPoints[i].string = \"局:\" + users[j].juPoints;\n            this.seatPanPoints[i].string = \"盘:\" + users[j].panPoints;\n            this.readyOk[i].active = (users[j].userStatus.status == \"READY\");\n            this.passLable[i].active = false;\n        }\n        let status = users[0].userStatus.status;\n        //还未发牌\n        if(status == \"UNREADY\" || status == \"READY\"){\n            for(let i = 0, j = cur; i < 4; i++, j++){\n                this.pushCardsView[i].active = false;\n                if(j >= 4)j -= 4;\n                if(users[j] == null)continue;\n                let bool = users[j].userStatus.status == \"READY\";\n                this.readyOk[i].active = bool;\n            }\n            let bool = users[cur].userStatus.status == \"READY\";\n            this.readyBtn.active = !bool;\n            this.cancelReadyBtn.active = bool;\n            if(roomInfo.readyNumbers == 4 && globalThis._userInfo.user_id == roomInfo.createUserId)this.startBtn.active = true;\n            else this.startBtn.active = false;\n        }else {\n            //已经发牌了\n            //显示玩家手牌\n            this.cardList = users[cur].userCards;\n            let bool = true;\n            for(let i = 0, j = cur; i < 4; i++, j++){\n                if(j >= 4)j -= 4;\n                let status = users[j].userStatus.status;\n                if(status == \"PLAYED\"){\n                    let cardList = users[j].userStatus.data;\n                    this.showPushCards(i, cardList);\n                    bool = false;\n                }else if(status == \"PLAYING\"){\n                    // this.onloadAtlas(j);\n                    this.showPoker(j);\n                    if(j == cur){\n                        for(let p = 0, q = cur; p < 4; p++, q--){\n                            if(q < 0)q += 4;\n                            if(users[q].userStatus.status == \"PLAYED\"){\n                                this.pushcardVo.prePushSeat = q;\n                                break;\n                            }\n                        }\n                    }\n                }else if(status == \"PASS\"){\n                    this.passLable[i].active = true;\n                }else if(status == \"END\"){\n                    //\n                }\n            }\n            if(users[cur].userStatus.status == \"PLAYING\"){\n                this.pushCardBtn.active = true;\n                this.passBtn.active = bool;\n            }\n            this.paiPoints.string = \"牌面积分:\" + roomInfo.curPoints;\n        }\n    }\n\n    onUserReady(data){\n        let mySeat = globalThis._userInfo.room_seat;\n        if(data.readyNumbers == 4 && globalThis._userInfo.user_id == data.createUserId)this.startBtn.active = true;\n        else this.startBtn.active = false;\n        let seat = data.seat;\n        let ready:boolean = (data.isReady == 1);\n        this.readyOk[(seat - mySeat + 4) % 4].active = ready;\n        \n    }\n    onReadyBtnClicked(){\n        this.bzdSoundMgt.play(\"button\");\n        this.readyBtn.active = false;\n        this.cancelReadyBtn.active = true;\n        globalThis._BZDClient.sendMessage(\"userReady\",{seat:globalThis._userInfo.room_seat, isReady: 1, roomId:globalThis._userInfo.room_id})\n    }\n\n    onCancelReadyBtnClicked(){\n        this.bzdSoundMgt.play(\"button\");\n        this.readyBtn.active = true;\n        this.cancelReadyBtn.active = false;\n        globalThis._BZDClient.sendMessage(\"userReady\",{seat:globalThis._userInfo.room_seat, isReady: -1, roomId:globalThis._userInfo.room_id})\n    }\n\n    onStartBtnClicked(){\n        this.bzdSoundMgt.play(\"button\");\n        globalThis._BZDClient.sendMessage(\"dealCards\",{});\n    }\n\n    onExitRoomBtnClicked(){\n        this.bzdSoundMgt.play(\"button\");\n        director.loadScene(\"HallScene\");\n    }\n\n    onDealCards(data){\n        console.log(\"获得牌型：\",data);\n        this.bzdSoundMgt.play(\"DealFold\");\n        \n        this.startBtn.active = false;\n        this.readyBtn.active = false;\n        this.cancelReadyBtn.active = false;\n        //初始化各出牌区域\n        for(let i = 0; i < 4; i++){\n            this.cleanPushCards(i);\n        }\n        for(let i = 0; i < 4; i++){\n            this.readyOk[i].active = false;\n        }\n        let cards = data.cardList[globalThis._userInfo.room_seat];\n        let pushSeat = data.pushSeat;\n        this.cardList = cards;\n        this.pushcardVo.prePushSeat = pushSeat;\n        // this.onloadAtlas(pushSeat);\n        this.showPoker(pushSeat);\n    }\n\n    onloadAtlas(j) {\n        // resources.load(\"image/games/bazhadan/card/pokerlist\", SpriteAtlas, (err, spriteAtlas)=>{\n        //     if(err)console.log(\"load atlas err: \", err);\n        //     else {\n        //         this.pokerAtlas = spriteAtlas;\n        //         this.showPoker(j);\n        //     }\n        // })\n\n        this.showPoker(j);\n    }\n    showPoker(j) {\n        this.pokerView.active = true;\n        this.passBtn.active = false;\n        this.pushCardBtn.active = false;\n        let bpk = this.pokerAtlas.getSpriteFrame(\"0\");\n        let x = -360, y = -50, z = 0;\n        for(let i = 0; i < this.cardList.length; i++){\n            if(i == 17){\n                y = -150;\n                x -= 850;\n            }\n            let pk = this.pokerAtlas.getSpriteFrame(this.cardList[i]+\"\");\n            let cardName = \"card\" + i;\n            let cardNode = this.pokerView.getChildByName(cardName);\n            cardNode.setPosition(new Vec3(0, 185, 0));\n            cardNode.active = true;\n            let sp = cardNode.getComponent(Sprite);\n            sp.spriteFrame = bpk;\n            tween(cardNode).to(1.5,{position: new Vec3(i*50+x, y, z)})\n            .call(() => {\n                sp.spriteFrame = pk;\n                if(i == 26){        \n                    if(globalThis._userInfo.room_seat == j){\n                        this.pushCardBtn.active = true;\n                        if(globalThis._userInfo.room_seat != this.pushcardVo.prePushSeat){\n                            this.passBtn.active = true;\n                        }\n                    }\n                }\n            }).start();\n        }\n    }\n\n    onCardClicked(type,arg){\n        this.bzdSoundMgt.play(\"SpecSelectCard\");\n        let cardName = \"card\" + arg;\n        let cardNode = this.pokerView.getChildByName(cardName);\n        \n        let p = cardNode.getPosition()\n        if(this.cardSet.has(arg)){\n            this.cardSet.delete(arg);\n            p.y -= 30;\n        }else {\n            this.cardSet.add(arg);\n            p.y += 30;\n        }\n        cardNode.setPosition(p);\n    }\n\n    onPushCardBtnClicked(){\n        console.log(\"出牌！\")\n        console.log(this.pushcardVo);\n        console.log(JSON.stringify(this.pushcardVo));\n        this.pushcardVo.curCardList.length = 0;\n        \n        let cards = Array.from(this.cardSet);\n        cards.sort((a, b) => a - b);\n        console.log(\"eee:\",cards);\n        for(let i of cards){\n            let cardName = \"card\" + i;\n            let cardNode = this.pokerView.getChildByName(cardName);\n            let sp = cardNode.getComponent(Sprite);\n            let spf = sp.spriteFrame;\n            let cardValue = spf.name;\n            this.pushcardVo.curCardList.push(Number(cardValue));\n        }\n        this.pushcardVo.curSeat = globalThis._userInfo.room_seat;\n        globalThis._BZDClient.sendMessage(\"pushCards\",{pushCardsInfo: JSON.stringify(this.pushcardVo)});\n        \n    }\n\n    randomAudioName(type){\n        const random = (min:any,max:any) => Math.floor(Math.random() * (max - min + 1) + min)\n        let arr:any = [\"Woman_\",\"Man_\"]\n            \n        let idx = random( 0,1)\n        if(type == \"buyao\"){\n            let idx = random(1, 4);\n            type += idx;\n        }\n        return arr[idx] + type;\n    }\n    onPushCards(data){\n        this.pushcardVo = data.pushCardsInfo;\n        let curSeat = globalThis._userInfo.room_seat;\n        let isRight: boolean = data.isRight;\n        let audioName = this.randomAudioName(this.pushcardVo.type);\n        //出牌正确\n        if(isRight){\n            this.bzdSoundMgt.play(audioName);\n            //是我出的牌\n            if(curSeat == this.pushcardVo.preSeat){\n                if(this.pushcardVo.preStatus == \"PLAYED\"){\n                    this.bzdSoundMgt.play(\"Special_give\")\n                    let length = this.cardSet.size;\n                    let d_x = 30;\n                    let x = -70 - d_x * (length / 2);\n                    let cards = Array.from(this.cardSet);\n                    cards.sort((a, b) => a - b);\n                    for(let i of cards){\n                        // this.pushCardSet.add(i);\n                        let cardName = \"card\" + i;\n                        let cardNode = this.pokerView.getChildByName(cardName);\n                        cardNode.active = false;\n                        // tween(cardNode).to(0.8,{position: new Vec3(x,90,0)}).start();\n                        // x += d_x;\n                    }\n                    let cardList = this.pushcardVo.preCardList;                   \n                    this.showPushCards(0, cardList);\n                    this.cardSet.clear();\n                    //调整剩余牌序\n                    x = -360; let y = -50, z = 0;\n                    this.cardList = this.pushcardVo.preUserCards;\n                    for(let i = 0; i < this.cardList.length; i++){\n                        if(i == 17){\n                            y = -150;\n                            x -= 850;\n                        }\n                        let pk = this.pokerAtlas.getSpriteFrame(this.cardList[i]+\"\");\n                        let cardName = \"card\" + i;\n                        let cardNode = this.pokerView.getChildByName(cardName);\n                        let sp = cardNode.getComponent(Sprite);\n                        sp.spriteFrame = pk;\n                        cardNode.setPosition(new Vec3(i*50+x, y, z));\n                        cardNode.active = true;\n                    }\n                    for(let i = this.cardList.length; i < 27; i++){\n                        let cardName = \"card\" + i;\n                        let cardNode = this.pokerView.getChildByName(cardName);\n                        cardNode.active = false;\n                    }\n\n                    this.passBtn.active = false;\n                    this.pushCardBtn.active = false;\n                }else if(this.pushcardVo.preStatus == \"PASS\"){\n                    \n                }\n            }\n            \n            //不是我出的牌，将对应出牌位置更新\n            else{\n                //先更新出牌位置信息(将牌型展出)，到下一家出牌\n                let seat = (this.pushcardVo.preSeat - curSeat + 4) % 4;\n                this.cleanPushCards(seat);\n                if(this.pushcardVo.preSeat == this.pushcardVo.prePushSeat){//if(this.pushcardVo.preStatus == \"PLAYED\")\n                    let cardList = this.pushcardVo.preCardList;                   \n                    this.showPushCards(seat, cardList);\n                }else if(this.pushcardVo.preStatus == \"PASS\"){\n                    this.passLable[seat].active = true;\n                }else if(this.pushcardVo.preStatus == \"END\"){\n\n                }\n                \n                //如果下家是我\n                if((this.pushcardVo.preSeat + 1) % 4 == curSeat){\n                    // for(let i of this.pushCardSet){\n                    //     let cardName = \"card\" + i;\n                    //     let cardNode = this.pokerView.getChildByName(cardName);\n                    //     cardNode.active = false;\n                    // }\n                    // this.pushCardSet.clear();\n                    if(this.pushcardVo.myStatus == \"PLAYING\"){\n                        this.cleanPushCards(0);\n                        if(globalThis._userInfo.room_seat == this.pushcardVo.prePushSeat){\n                                this.passBtn.active = false;\n                                this.promptBtn.active = false;\n                            }\n                        else {\n                            this.passBtn.active = true;\n                            this.promptBtn.active = true;\n                        }\n                        this.pushCardBtn.active = true;\n                    }else if(this.pushcardVo.myStatus == \"END\"){\n                        this.pushcardVo.curSeat = globalThis._userInfo.room_seat;\n                        globalThis._BZDClient.sendMessage(\"userEnd\",{pushCardsInfo: JSON.stringify(this.pushcardVo)});\n                    }else if(this.pushcardVo.myStatus == \"OVER\"){\n                        console.log(\"游戏结束!\")\n                        this.pushcardVo.curSeat = globalThis._userInfo.room_seat;\n                        globalThis._BZDClient.sendMessage(\"panGameOver\",{pushCardsInfo: JSON.stringify(this.pushcardVo)});\n                    }else if(this.pushcardVo.myStatus == \"TOTEAMMATE\"){\n                        this.pushcardVo.curSeat = globalThis._userInfo.room_seat;\n                        globalThis._BZDClient.sendMessage(\"TOTEAMMATE\",{pushCardsInfo: JSON.stringify(this.pushcardVo)});\n                    }\n                }\n            }\n            this.paiPoints.string = \"牌面积分:\" + this.pushcardVo.points;\n        }\n        //出牌不正确\n        else {\n            if(curSeat == this.pushcardVo.curSeat){\n                //是我出的牌\n                this.bzdSoundMgt.play(\"SpecSysReturnFail\");\n                console.log(\"不能这样出牌！\");\n            }\n            else {\n                //不是我出的牌，不用管\n            }\n        }\n    }\n    showPushCards(seat, cardList){\n        let pushCardsView = this.pushCardsView[seat];\n        for(let i = 0; i < cardList.length; i++){\n            let pk = this.pokerAtlas.getSpriteFrame(cardList[i]+\"\");\n            let cardName = \"card\" + i;\n            let cardNode = pushCardsView.getChildByName(cardName);\n            let sp = cardNode.getComponent(Sprite);\n            sp.spriteFrame = pk;\n            cardNode.active = true;\n        }\n    }\n    showPushCardsBtn() {\n        console.log(\"1:\",globalThis._userInfo.room_seat);\n        console.log(\"2:\",this.pushcardVo.prePushSeat);\n        if(globalThis._userInfo.room_seat == this.pushcardVo.prePushSeat)\n            this.passBtn.active = false;\n        else \n            this.passBtn.active = true;\n\n        if(globalThis._userInfo.room_seat == (this.pushcardVo.preSeat + 1) % 4)\n            this.pushCardBtn.active = true;\n\n        console.log(this.pushCardBtn.active);\n    }\n\n    onPassBtnClicked(){\n        this.passBtn.active = false;\n        this.pushCardBtn.active = false;\n        this.passLable[0].active = true;\n        this.pushcardVo.curSeat = globalThis._userInfo.room_seat;\n        this.cleanCardSet();\n        globalThis._BZDClient.sendMessage(\"passCards\",{pushCardsInfo: JSON.stringify(this.pushcardVo)});\n    }\n\n    cleanCardSet(){\n        for(let arg of this.cardSet){\n            let cardName = \"card\" + arg;\n            let cardNode = this.pokerView.getChildByName(cardName);\n            let p = cardNode.getPosition()\n            this.cardSet.delete(arg);\n            p.y -= 30;\n            cardNode.setPosition(p);\n        }\n    }\n\n    cleanPushCards(i){\n        let pcv = this.pushCardsView[i];\n        pcv.active = true;\n        for(let i = 0; i < 27; i++){\n            let cardName = \"card\" + i;\n            let cardNode = pcv.getChildByName(cardName);\n            // let sp = cardNode.getComponent(Sprite);\n            // sp.spriteFrame = null;\n            cardNode.active = false;\n        }\n        this.passLable[i].active = false;\n    }\n\n    onPanOverPageClosedBtnClicked(){\n        this.bzdSoundMgt.play(\"button\");\n        this.panOver.active = false;\n        this.pushcardVo = new PushCardVo();\n        globalThis._BZDClient.sendMessage(\"requestRoomInfo\",{});\n    }\n\n    playAudioEffect(name:string){\n        this.bzdSoundMgt.play(name);\n    }\n}\n\n\n"]}