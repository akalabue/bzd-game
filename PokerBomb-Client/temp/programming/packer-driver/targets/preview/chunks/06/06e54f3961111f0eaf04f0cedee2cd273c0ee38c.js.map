{"version":3,"sources":["file:///D:/Documents/OneDrive/%E6%A1%8C%E9%9D%A2/%E5%85%B6%E4%BB%96%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%AF%95%E4%B8%9A%E8%AE%BE%E8%AE%A1/PokerBomb/bzd-game/PokerBomb-Client/assets/Script/loginScene/LoginClient.ts"],"names":["_decorator","Component","EventTarget","ccclass","property","eventtarget","globalThis","_eventtarget","LoginClient","_ws","start","_init","update","deltaTime","_loginClientMgr","_connectServer","ws","WebSocket","window","location","hostname","onopen","console","log","onmessage","result","message","data","obj","JSON","parse","_data","_type","type","responseServerMessage","onclose","onerror","err","emit","sendMessage","sendData","send","stringify"],"mappings":";;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,W,OAAAA,W;;;;;;;OAChC;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBJ,U;AAExBK,MAAAA,W,GAAc,IAAIH,WAAJ,E;AACpBI,MAAAA,UAAU,CAACC,YAAX,GAA0BF,WAA1B,C,CAAsC;;6BAGzBG,W,WADZL,OAAO,CAAC,aAAD,C,gBAAR,MACaK,WADb,SACiCP,SADjC,CAC2C;AAAA;AAAA;AAAA,eAE/BQ,GAF+B,GAEnB,IAFmB;AAAA;;AAIvCC,QAAAA,KAAK,GAAG;AACJ,eAAKC,KAAL;AACH;;AAEDC,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB;;AAEOF,QAAAA,KAAK,GAAG;AACZL,UAAAA,UAAU,CAACQ,eAAX,GAA6B,IAA7B,CADY,CACsB;AAClC;AACH;;AAEOC,QAAAA,cAAc,GAAE;AACpB,cAAMC,EAAE,GAAG,IAAIC,SAAJ,WAAsBC,MAAM,CAACC,QAAP,CAAgBC,QAAtC,2BAAX;AACA,eAAKX,GAAL,GAAWO,EAAX;;AACAA,UAAAA,EAAE,CAACK,MAAH,GAAY,MAAI;AACZC,YAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EADY,CAEZ;AACH,WAHD;;AAIAP,UAAAA,EAAE,CAACQ,SAAH,GAAgBC,MAAD,IAAU;AACrB,gBAAIC,OAAO,GAAGD,MAAM,CAACE,IAArB;AACA,gBAAIC,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWJ,OAAX,CAAV;AACAJ,YAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA0BK,GAA1B;AACA,gBAAIG,KAAK,GAAGH,GAAG,CAACD,IAAhB;AACA,gBAAIK,KAAK,GAAGJ,GAAG,CAACK,IAAhB;AACA,iBAAKC,qBAAL,CAA2BF,KAA3B,EAAkCD,KAAlC;AACH,WAPD;;AAQAf,UAAAA,EAAE,CAACmB,OAAH,GAAa,MAAI;AACbb,YAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACH,WAFD;;AAGAP,UAAAA,EAAE,CAACoB,OAAH,GAAcC,GAAD,IAAO;AAChBf,YAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwBc,GAAxB;AACH,WAFD;AAGH;AAED;AACJ;AACA;;;AAEWH,QAAAA,qBAAqB,CAACD,IAAD,EAAON,IAAP,EAAY;AACpC;AACArB,UAAAA,UAAU,CAACC,YAAX,CAAwB+B,IAAxB,CAA6BL,IAA7B,EAAmCN,IAAnC;AACH;;AAEOY,QAAAA,WAAW,CAACP,KAAD,EAAQD,KAAR,EAAc;AAC7B,cAAIS,QAAQ,GAAG;AACXP,YAAAA,IAAI,EAAED,KADK;AAEXL,YAAAA,IAAI,EAAEI;AAFK,WAAf;;AAIA,eAAKtB,GAAL,CAASgC,IAAT,CAAcZ,IAAI,CAACa,SAAL,CAAeF,QAAf,CAAd,EAL6B,CAKW;;AAC3C;;AAvDsC,O","sourcesContent":["import { _decorator, Component, Node, EventTarget} from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\nconst eventtarget = new EventTarget();\r\nglobalThis._eventtarget = eventtarget;//globalThis是全局的\r\n\r\n@ccclass('LoginClient')\r\nexport class LoginClient extends Component {\r\n\r\n    private _ws : any = null;\r\n\r\n    start() {\r\n        this._init();\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n        \r\n    }\r\n\r\n    private _init() {\r\n        globalThis._loginClientMgr = this;//使得全局能够获取此对象\r\n        // this._connectServer();\r\n    }\r\n\r\n    private _connectServer(){\r\n        const ws = new WebSocket(`ws://${window.location.hostname}:9091/websocket/login`);\r\n        this._ws = ws;\r\n        ws.onopen = ()=>{\r\n            console.log(\"连接登录服务器成功\");\r\n            // ws.send(\"你好啊，服务器，我是wyp客户端\");\r\n        }\r\n        ws.onmessage = (result)=>{\r\n            let message = result.data;\r\n            let obj = JSON.parse(message);\r\n            console.log(\"接收到登录服务器消息：\",obj);\r\n            let _data = obj.data;\r\n            let _type = obj.type;\r\n            this.responseServerMessage(_type, _data);\r\n        }\r\n        ws.onclose = ()=>{\r\n            console.log(\"与登录服务器断开连接\");\r\n        }\r\n        ws.onerror = (err)=>{\r\n            console.log(\"登录网络连接出错：\",err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 响应服务端消息 type-->消息类型，  data-->消息数据\r\n     */\r\n\r\n    public responseServerMessage(type, data){\r\n        // console.log(\"服务端发送数据--> 类型：\", type, \" 数据：\", data)\r\n        globalThis._eventtarget.emit(type, data);\r\n    }\r\n\r\n    private sendMessage(_type, _data){\r\n        let sendData = {\r\n            type: _type,\r\n            data: _data\r\n        }\r\n        this._ws.send(JSON.stringify(sendData));//将javascript对象转为字符串\r\n    }\r\n}\r\n\r\n"]}