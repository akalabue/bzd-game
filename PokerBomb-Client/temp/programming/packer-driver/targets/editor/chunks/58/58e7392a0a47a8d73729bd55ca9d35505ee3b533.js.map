{"version":3,"sources":["file:///D:/CocosProjects/PokerBomb/assets/Script/LoginClient.ts"],"names":["_decorator","Component","EventTarget","ccclass","property","eventtarget","globalThis","_eventtarget","LoginClient","_ws","start","_init","update","deltaTime","_loginClientMgr","_connectServer","ws","WebSocket","onopen","console","log","onmessage","result","message","data","JSON","stringify","_data","_type","type","responseServerMessage","onclose","onerror","err","emit","sendMessage","sendData","send"],"mappings":";;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,W,OAAAA,W;;;;;;;OAChC;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBJ,U;AAExBK,MAAAA,W,GAAc,IAAIH,WAAJ,E;AACpBI,MAAAA,UAAU,CAACC,YAAX,GAA0BF,WAA1B,C,CAAsC;;6BAGzBG,W,WADZL,OAAO,CAAC,aAAD,C,gBAAR,MACaK,WADb,SACiCP,SADjC,CAC2C;AAAA;AAAA;AAAA,eAE/BQ,GAF+B,GAEnB,IAFmB;AAAA;;AAIvCC,QAAAA,KAAK,GAAG;AACJ,eAAKC,KAAL;AACH;;AAEDC,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB;;AAEOF,QAAAA,KAAK,GAAG;AACZL,UAAAA,UAAU,CAACQ,eAAX,GAA6B,IAA7B,CADY,CACsB;;AAClC,eAAKC,cAAL;AACH;;AAEOA,QAAAA,cAAc,GAAE;AACpB,gBAAMC,EAAE,GAAG,IAAIC,SAAJ,CAAc,iCAAd,CAAX;AACA,eAAKR,GAAL,GAAWO,EAAX;;AACAA,UAAAA,EAAE,CAACE,MAAH,GAAY,MAAI;AACZC,YAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EADY,CAEZ;AACH,WAHD;;AAIAJ,UAAAA,EAAE,CAACK,SAAH,GAAgBC,MAAD,IAAU;AACrB,gBAAIC,OAAO,GAAGD,MAAM,CAACE,IAArB;AACAL,YAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwBG,OAAxB;AACAA,YAAAA,OAAO,GAAGE,IAAI,CAACC,SAAL,CAAeH,OAAf,CAAV;AACA,gBAAII,KAAK,GAAGJ,OAAO,CAACC,IAApB;AACA,gBAAII,KAAK,GAAGL,OAAO,CAACM,IAApB;AACAV,YAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BQ,KAA9B,EAAqC,MAArC,EAA6CD,KAA7C;AACA,iBAAKG,qBAAL,CAA2BF,KAA3B,EAAkCD,KAAlC;AACH,WARD;;AASAX,UAAAA,EAAE,CAACe,OAAH,GAAa,MAAI;AACbZ,YAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACH,WAFD;;AAGAJ,UAAAA,EAAE,CAACgB,OAAH,GAAcC,GAAD,IAAO;AAChBd,YAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBa,GAAtB;AACH,WAFD;AAGH;AAED;AACJ;AACA;;;AAEWH,QAAAA,qBAAqB,CAACD,IAAD,EAAOL,IAAP,EAAY;AACpC;AACAlB,UAAAA,UAAU,CAACC,YAAX,CAAwB2B,IAAxB,CAA6BL,IAA7B,EAAmCL,IAAnC;AACH;;AAEOW,QAAAA,WAAW,CAACP,KAAD,EAAQD,KAAR,EAAc;AAC7B,cAAIS,QAAQ,GAAG;AACXP,YAAAA,IAAI,EAAED,KADK;AAEXJ,YAAAA,IAAI,EAAEG;AAFK,WAAf;;AAIA,eAAKlB,GAAL,CAAS4B,IAAT,CAAcZ,IAAI,CAACC,SAAL,CAAeU,QAAf,CAAd,EAL6B,CAKW;;AAC3C;;AAxDsC,O","sourcesContent":["import { _decorator, Component, Node, EventTarget} from 'cc';\nconst { ccclass, property } = _decorator;\n\nconst eventtarget = new EventTarget();\nglobalThis._eventtarget = eventtarget;//globalThis是全局的\n\n@ccclass('LoginClient')\nexport class LoginClient extends Component {\n\n    private _ws : any = null;\n\n    start() {\n        this._init();\n    }\n\n    update(deltaTime: number) {\n        \n    }\n\n    private _init() {\n        globalThis._loginClientMgr = this;//使得全局能够获取此对象\n        this._connectServer();\n    }\n\n    private _connectServer(){\n        const ws = new WebSocket(\"ws:127.0.0.1:9090/websocket/wyp\");\n        this._ws = ws;\n        ws.onopen = ()=>{\n            console.log(\"连接成功\");\n            // ws.send(\"你好啊，服务器，我是wyp客户端\");\n        }\n        ws.onmessage = (result)=>{\n            let message = result.data;\n            console.log(\"接收到服务器消息：\",message);\n            message = JSON.stringify(message);\n            let _data = message.data;\n            let _type = message.type;\n            console.log(\"服务端发送数据--> 类型：\", _type, \" 数据：\", _data)\n            this.responseServerMessage(_type, _data);\n        }\n        ws.onclose = ()=>{\n            console.log(\"与服务器断开连接\");\n        }\n        ws.onerror = (err)=>{\n            console.log(\"网络连接出错：\",err);\n        }\n    }\n\n    /**\n     * 响应服务端消息 type-->消息类型，  data-->消息数据\n     */\n\n    public responseServerMessage(type, data){\n        // console.log(\"服务端发送数据--> 类型：\", type, \" 数据：\", data)\n        globalThis._eventtarget.emit(type, data);\n    }\n\n    private sendMessage(_type, _data){\n        let sendData = {\n            type: _type,\n            data: _data\n        }\n        this._ws.send(JSON.stringify(sendData));//将javascript对象转为字符串\n    }\n}\n\n"]}