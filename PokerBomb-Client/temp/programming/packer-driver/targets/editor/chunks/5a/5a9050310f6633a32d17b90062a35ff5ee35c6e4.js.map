{"version":3,"sources":["file:///D:/Documents/OneDrive/%E6%A1%8C%E9%9D%A2/%E5%85%B6%E4%BB%96%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%AF%95%E4%B8%9A%E8%AE%BE%E8%AE%A1/PokerBomb/PokerBomb-Client/assets/Script/games/bazhadan/PokerCtr.ts"],"names":["_decorator","Component","Node","SpriteAtlas","resources","Sprite","ccclass","property","PokerCtr","cardList","pokerAtlas","start","onDealCards","data","console","log","cards","globalThis","_userInfo","room_seat","pokerCtl","init","onloadAtlas","load","err","spriteAtlas","showPoker","pokerView","active","i","pk","getSpriteFrame","cardName","cardNode","getChildByName","sp","getComponent","spriteFrame"],"mappings":";;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,M,OAAAA,M;;;;;;;OACxD;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBP,U;;0BAGjBQ,Q,WADZF,OAAO,CAAC,UAAD,C,UAKHC,QAAQ,CAACL,IAAD,C,2BALb,MACaM,QADb,SAC8BP,SAD9B,CACwC;AAAA;AAAA;AAAA,eAEpCQ,QAFoC;AAAA,eAGpCC,UAHoC;;AAAA;AAAA;;AAOpCC,QAAAA,KAAK,GAAG,CACP;;AAEDC,QAAAA,WAAW,CAACC,IAAD,EAAM;AACbC,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBF,IAApB;AACA,cAAIG,KAAK,GAAGH,IAAI,CAACJ,QAAL,CAAcQ,UAAU,CAACC,SAAX,CAAqBC,SAAnC,CAAZ;AACA,cAAIC,QAAQ,GAAG,IAAIZ,QAAJ,EAAf;AACAY,UAAAA,QAAQ,CAACC,IAAT,CAAcL,KAAd;AACH;;AAEDK,QAAAA,IAAI,CAACL,KAAD,EAAkB;AAClB,eAAKP,QAAL,GAAgBO,KAAhB;AACA,eAAKM,WAAL;AACH;;AACDA,QAAAA,WAAW,GAAG;AACVlB,UAAAA,SAAS,CAACmB,IAAV,CAAe,qCAAf,EAAsDpB,WAAtD,EAAmE,CAACqB,GAAD,EAAMC,WAAN,KAAoB;AACnF,gBAAGD,GAAH,EAAOV,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCS,GAAhC,EAAP,KACK;AACD,mBAAKd,UAAL,GAAkBe,WAAlB;AACAX,cAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4B,KAAKL,UAAjC;AACA,mBAAKgB,SAAL;AACH;AACJ,WAPD;AAQH;;AACDA,QAAAA,SAAS,GAAG;AACR,eAAKC,SAAL,CAAeC,MAAf,GAAwB,IAAxB;;AACA,eAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,CAAnB,EAAsBA,CAAC,EAAvB,EAA0B;AACtB,gBAAIC,EAAE,GAAG,KAAKpB,UAAL,CAAgBqB,cAAhB,CAA+B,KAAKtB,QAAL,CAAcoB,CAAd,IAAiB,EAAhD,CAAT;AACA,gBAAIG,QAAQ,GAAG,UAAUH,CAAC,GAAG,CAAd,CAAf;AACAf,YAAAA,OAAO,CAACC,GAAR,CAAYiB,QAAZ;AACAlB,YAAAA,OAAO,CAACC,GAAR,CAAY,KAAKY,SAAjB;AACA,gBAAIM,QAAQ,GAAG,KAAKN,SAAL,CAAeO,cAAf,CAA8BF,QAA9B,CAAf;AACAlB,YAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwBkB,QAAxB;AACA,gBAAIE,EAAE,GAAGF,QAAQ,CAACG,YAAT,CAAsB/B,MAAtB,CAAT;AACA8B,YAAAA,EAAE,CAACE,WAAH,GAAiBP,EAAjB;AACH;AACJ;;AA3CmC,O","sourcesContent":["import { _decorator, Component, Node, SpriteAtlas, resources, Sprite } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('PokerCtr')\nexport class PokerCtr extends Component {\n    \n    cardList: number[]\n    pokerAtlas: SpriteAtlas\n    @property(Node)\n    pokerView: Node\n    \n    start() {\n    }\n\n    onDealCards(data){\n        console.log(\"获得牌型：\",data);\n        let cards = data.cardList[globalThis._userInfo.room_seat];\n        let pokerCtl = new PokerCtr()\n        pokerCtl.init(cards);\n    }\n\n    init(cards: number[]) {\n        this.cardList = cards;\n        this.onloadAtlas()\n    }\n    onloadAtlas() {\n        resources.load(\"image/games/bazhadan/card/pokerlist\", SpriteAtlas, (err, spriteAtlas)=>{\n            if(err)console.log(\"load atlas err: \", err);\n            else {\n                this.pokerAtlas = spriteAtlas;\n                console.log(\"this.atlas: \", this.pokerAtlas);\n                this.showPoker();\n            }\n        })\n    }\n    showPoker() {\n        this.pokerView.active = true;\n        for(let i = 0; i < 7; i++){\n            let pk = this.pokerAtlas.getSpriteFrame(this.cardList[i]+\"\");\n            let cardName = \"card\" + (i + 1);\n            console.log(cardName);\n            console.log(this.pokerView)\n            let cardNode = this.pokerView.getChildByName(cardName);\n            console.log(\"cardNode:\",cardNode);\n            let sp = cardNode.getComponent(Sprite);\n            sp.spriteFrame = pk;\n        }\n    }\n\n}\n\n"]}