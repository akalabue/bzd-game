{"version":3,"sources":["file:///D:/Documents/OneDrive/%E6%A1%8C%E9%9D%A2/%E5%85%B6%E4%BB%96%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%AF%95%E4%B8%9A%E8%AE%BE%E8%AE%A1/PokerBomb/PokerBomb-Client/assets/Script/games/bazhadan/PokerCtr.ts"],"names":["_decorator","Component","SpriteAtlas","resources","Sprite","ccclass","property","PokerCtr","cardList","pokerAtlas","start","globalThis","_eventtarget","on","onDealCards","data","console","log","cards","_userInfo","room_seat","pokerCtl","init","onloadAtlas","load","err","spriteAtlas","showPoker","node","active","i","pk","getSpriteFrame","cardName","cardNode","getChildByName","sp","getComponent","spriteFrame"],"mappings":";;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,M,OAAAA,M;;;;;;;OACxD;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBN,U;;0BAGjBO,Q,WADZF,OAAO,CAAC,UAAD,C,gBAAR,MACaE,QADb,SAC8BN,SAD9B,CACwC;AAAA;AAAA;AAAA,eAEpCO,QAFoC;AAAA,eAGpCC,UAHoC;AAAA;;AAKpCC,QAAAA,KAAK,GAAG;AACJC,UAAAA,UAAU,CAACC,YAAX,CAAwBC,EAAxB,CAA2B,WAA3B,EAAwC,KAAKC,WAA7C,EAA0D,IAA1D;AACH;;AAEDA,QAAAA,WAAW,CAACC,IAAD,EAAM;AACbC,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBF,IAApB;AACA,cAAIG,KAAK,GAAGH,IAAI,CAACP,QAAL,CAAcG,UAAU,CAACQ,SAAX,CAAqBC,SAAnC,CAAZ;AACA,cAAIC,QAAQ,GAAG,IAAId,QAAJ,EAAf;AACAc,UAAAA,QAAQ,CAACC,IAAT,CAAcJ,KAAd;AACH;;AAEDI,QAAAA,IAAI,CAACJ,KAAD,EAAkB;AAClB,eAAKV,QAAL,GAAgBU,KAAhB;AACA,eAAKK,WAAL;AACH;;AACDA,QAAAA,WAAW,GAAG;AACVpB,UAAAA,SAAS,CAACqB,IAAV,CAAe,qCAAf,EAAsDtB,WAAtD,EAAmE,CAACuB,GAAD,EAAMC,WAAN,KAAoB;AACnF,gBAAGD,GAAH,EAAOT,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCQ,GAAhC,EAAP,KACK;AACD,mBAAKhB,UAAL,GAAkBiB,WAAlB;AACAV,cAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4B,KAAKR,UAAjC;AACA,mBAAKkB,SAAL;AACH;AACJ,WAPD;AAQH;;AACDA,QAAAA,SAAS,GAAG;AACR,eAAKC,IAAL,CAAUC,MAAV,GAAmB,IAAnB;;AACA,eAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,CAAnB,EAAsBA,CAAC,EAAvB,EAA0B;AACtB,gBAAIC,EAAE,GAAG,KAAKtB,UAAL,CAAgBuB,cAAhB,CAA+B,KAAKxB,QAAL,CAAcsB,CAAd,IAAiB,EAAhD,CAAT;AACA,gBAAIG,QAAQ,GAAG,UAAUH,CAAC,GAAG,CAAd,CAAf;AACAd,YAAAA,OAAO,CAACC,GAAR,CAAYgB,QAAZ;AACAjB,YAAAA,OAAO,CAACC,GAAR,CAAY,KAAKW,IAAjB;AACA,gBAAIM,QAAQ,GAAG,KAAKN,IAAL,CAAUO,cAAV,CAAyBF,QAAzB,CAAf;AACAjB,YAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwBiB,QAAxB;AACA,gBAAIE,EAAE,GAAGF,QAAQ,CAACG,YAAT,CAAsBjC,MAAtB,CAAT;AACAgC,YAAAA,EAAE,CAACE,WAAH,GAAiBP,EAAjB;AACH;AACJ;;AA1CmC,O","sourcesContent":["import { _decorator, Component, Node, SpriteAtlas, resources, Sprite } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('PokerCtr')\nexport class PokerCtr extends Component {\n    \n    cardList: number[]\n    pokerAtlas: SpriteAtlas\n    \n    start() {\n        globalThis._eventtarget.on(\"dealCards\", this.onDealCards, this);\n    }\n\n    onDealCards(data){\n        console.log(\"获得牌型：\",data);\n        let cards = data.cardList[globalThis._userInfo.room_seat];\n        let pokerCtl = new PokerCtr()\n        pokerCtl.init(cards);\n    }\n\n    init(cards: number[]) {\n        this.cardList = cards;\n        this.onloadAtlas()\n    }\n    onloadAtlas() {\n        resources.load(\"image/games/bazhadan/card/pokerlist\", SpriteAtlas, (err, spriteAtlas)=>{\n            if(err)console.log(\"load atlas err: \", err);\n            else {\n                this.pokerAtlas = spriteAtlas;\n                console.log(\"this.atlas: \", this.pokerAtlas);\n                this.showPoker();\n            }\n        })\n    }\n    showPoker() {\n        this.node.active = true;\n        for(let i = 0; i < 7; i++){\n            let pk = this.pokerAtlas.getSpriteFrame(this.cardList[i]+\"\");\n            let cardName = \"card\" + (i + 1);\n            console.log(cardName);\n            console.log(this.node)\n            let cardNode = this.node.getChildByName(cardName);\n            console.log(\"cardNode:\",cardNode);\n            let sp = cardNode.getComponent(Sprite);\n            sp.spriteFrame = pk;\n        }\n    }\n\n}\n\n"]}