{"version":3,"sources":["file:///D:/Documents/OneDrive/%E6%A1%8C%E9%9D%A2/%E5%85%B6%E4%BB%96%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%AF%95%E4%B8%9A%E8%AE%BE%E8%AE%A1/PokerBomb/PokerBomb-Client/assets/Script/hallScene/HallSoundMgt.ts"],"names":["_decorator","Component","AudioClip","AudioSource","ccclass","property","HallSoundMgt","constructor","_dict","Map","getInstance","instance","start","i","audioList","length","element","set","name","console","log","play","audioClip","get","_audioSource","undefined","playOneShot"],"mappings":";;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,W,OAAAA,W;;;;;;;OAC3C;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBL,U;;8BAGjBM,Y,WADZF,OAAO,CAAC,cAAD,C,UAcHC,QAAQ,CAAC,CAACH,SAAD,CAAD,C,UAKRG,QAAQ,CAACF,WAAD,C,sCAnBb,MACaG,YADb,SACkCL,SADlC,CAC4C;AAGhCM,QAAAA,WAAW,GAAG;AAClB;;AADkB;;AAAA,eAadC,KAbc,GAakB,IAAIC,GAAJ,EAblB;;AAAA;AAErB;AACD;AACJ;AACA;;;AAC6B,eAAXC,WAAW,GAAG;AACxB,cAAG,CAACJ,YAAY,CAACK,QAAjB,EAA0BL,YAAY,CAACK,QAAb,GAAwB,IAAIL,YAAJ,EAAxB;AAC1B,iBAAOA,YAAY,CAACK,QAApB;AACH;;AASDC,QAAAA,KAAK,GAAG;AACJ,eAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKC,SAAL,CAAeC,MAAnC,EAA2CF,CAAC,EAA5C,EAAgD;AAC5C,kBAAMG,OAAO,GAAG,KAAKF,SAAL,CAAeD,CAAf,CAAhB;;AACA,iBAAKL,KAAL,CAAWS,GAAX,CAAeD,OAAO,CAACE,IAAvB,EAA6BF,OAA7B;AACH;;AAEDG,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAKZ,KAAjB;AACH;;AAEMa,QAAAA,IAAI,CAACH,IAAD,EAAe;AACtB,gBAAMI,SAAS,GAAG,KAAKd,KAAL,CAAWe,GAAX,CAAeL,IAAf,CAAlB;;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAYE,SAAZ,EAAsB,KAAKE,YAA3B;;AACA,cAAIF,SAAS,KAAKG,SAAlB,EAA6B;AACzB,iBAAKD,YAAL,CAAkBE,WAAlB,CAA8BJ,SAA9B;AACH;AACJ;;AApCuC,O,UAEzBX,Q;;;;;iBAYiB,E","sourcesContent":["import { _decorator, Component, Node, AudioClip, AudioSource } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('HallSoundMgt')\nexport class HallSoundMgt extends Component {\n\n    private static instance: HallSoundMgt;\n    private constructor() {\n        super();\n    }\n    /**\n     * getInstance\n     */\n    public static getInstance() {\n        if(!HallSoundMgt.instance)HallSoundMgt.instance = new HallSoundMgt();\n        return HallSoundMgt.instance;\n    }\n    @property([AudioClip])\n    public audioList: AudioClip[] = [];\n\n    private _dict: Map<string, AudioClip> = new Map();//音频集合\n\n    @property(AudioSource)\n    public _audioSource: AudioSource;\n    \n    start() {\n        for (let i = 0; i < this.audioList.length; i++) {\n            const element = this.audioList[i];\n            this._dict.set(element.name, element);\n        }\n\n        console.log(this._dict);\n    }\n\n    public play(name: string) {\n        const audioClip = this._dict.get(name);\n        console.log(audioClip,this._audioSource);\n        if (audioClip !== undefined) {\n            this._audioSource.playOneShot(audioClip);\n        }\n    }\n}\n\n"]}