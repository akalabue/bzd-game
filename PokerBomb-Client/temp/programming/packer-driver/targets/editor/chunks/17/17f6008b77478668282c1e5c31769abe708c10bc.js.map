{"version":3,"sources":["file:///D:/Documents/OneDrive/%E6%A1%8C%E9%9D%A2/%E5%85%B6%E4%BB%96%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%AF%95%E4%B8%9A%E8%AE%BE%E8%AE%A1/PokerBomb/PokerBomb-Client/assets/Script/games/bazhadan/BZDSceneMgt.ts"],"names":["_decorator","Component","Node","Label","SpriteAtlas","resources","Sprite","director","tween","Vec3","PushCardVo","ccclass","property","BZDSceneMgt","cardList","pokerAtlas","cardSet","Set","pushCardSet","pushcardVo","start","init","console","log","globalThis","_eventtarget","on","onRequestRoomInfo","onUserReady","onDealCards","onPushCards","onUpdatePoints","panGameOver","data","panOver","active","info","panGameOverInfo","panGameInfo","panGameInfos","i","_userInfo","room_seat","label","getChildByName","getComponent","string","points","teamPoints","total","juPoints","seat","panPoints","seatPanPoints","roomInfo","roomId","gamecount","currentNumbers","gameNumbers","scoreNumbers","updateAllSeats","users","gameRoles","cur","userId","user_id","j","seatName","userName","seatTotalPoints","totalPoints","seatJuPoints","readyOk","userStatus","status","bool","readyBtn","cancelReadyBtn","readyNumbers","createUserId","startBtn","userCards","onloadAtlas","showPushCards","passLable","pushCardBtn","passBtn","paiPoints","curPoints","mySeat","ready","isReady","onReadyBtnClicked","_BZDClient","sendMessage","room_id","onCancelReadyBtnClicked","onStartBtnClicked","onExitRoomBtnClicked","loadScene","cleanPushCards","cards","showPushCardsBtn","load","err","spriteAtlas","showPoker","pokerView","bpk","getSpriteFrame","x","y","z","length","pk","cardName","cardNode","setPosition","sp","spriteFrame","to","position","call","onCardClicked","type","arg","p","getPosition","has","delete","add","onPushCardBtnClicked","JSON","stringify","curCardList","Array","from","sort","a","b","spf","cardValue","name","push","Number","curSeat","pushCardsInfo","isRight","preSeat","preStatus","size","d_x","clear","prePushSeat","preCardList","myStatus","pushCardsView","onPassBtnClicked","cleanCardSet","pcv","onPanOverPageClosedBtnClicked"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Label, System, assetManager, AssetManager, SpriteAtlas, Prefab, instantiate, resources, SpriteFrame, Sprite, director, tween, Vec3 } from 'cc';\nimport { GameRole } from '../../common/GameRole';\nimport { PushCardVo } from '../../common/PushCardVo';\nimport { Poker } from './Poker';\nimport { PokerCtr } from './PokerCtr';\nconst { ccclass, property } = _decorator;\n\n@ccclass('BZDSceneMgt')\nexport class BZDSceneMgt extends Component {\n\n    @property(Label)\n    public roomId: Label\n    @property(Label)\n    public gamecount: Label\n\n    @property(Label)\n    seatName: Label[] = [];\n    @property(Label)\n    seatTotalPoints: Label[] = [];\n    \n    @property(Label)\n    seatJuPoints: Label[] = []\n    \n    @property(Label)\n    seatPanPoints: Label[] = []\n    \n    @property(Node)\n    readyOk: Node[] = []\n\n    @property(Node)\n    pushCardsView: Node[] = []\n\n    @property(Node)\n    passLable: Node[] = []\n    \n    @property(Node)\n    readyBtn: Node\n    \n    @property(Node)\n    cancelReadyBtn: Node\n    \n    @property(Node)\n    startBtn: Node\n\n    @property(Node)\n    pokerView: Node\n\n    @property(Node)\n    passBtn: Node\n\n    @property(Node)\n    pushCardBtn: Node\n\n    @property(Label)\n    paiPoints: Label\n\n    @property(Node)\n    panOver: Node\n\n\n    cardList: number[];\n    pokerAtlas: SpriteAtlas;\n    cardSet: Set<number> = new Set;\n    pushCardSet: Set<number> = new Set;\n    pushcardVo: PushCardVo\n\n    \n    start() {\n        this.init();\n        console.log(\"怡怡最美~\");\n        console.log(\"最爱怡怡~\");\n    }\n\n    private init(){\n        this.pushcardVo = new PushCardVo();\n        globalThis._eventtarget.on(\"requestRoomInfo\", this.onRequestRoomInfo, this);\n        globalThis._eventtarget.on(\"userReady\", this.onUserReady, this);\n        globalThis._eventtarget.on(\"dealCards\", this.onDealCards, this);\n        globalThis._eventtarget.on(\"pushCards\", this.onPushCards, this);\n        globalThis._eventtarget.on(\"updatePoints\", this.onUpdatePoints, this);\n        globalThis._eventtarget.on(\"panGameOver\", this.panGameOver, this);\n    }\n    panGameOver(data) {\n        this.panOver.active = true;\n        let info = data.panGameOverInfo;\n        let panGameInfo = info.panGameInfos;\n        let i = globalThis._userInfo.room_seat % 2;\n        let label = this.panOver.getChildByName(\"计分板\").getChildByName(\"本队积分详情\").getComponent(Label);\n        label.string = \"牌面积分：\" + panGameInfo[i].points + \"\\n队伍积分：\" + panGameInfo[i].teamPoints \n        + \"\\n总计：\" + panGameInfo[i].total + \"\\n局分：\" + panGameInfo[i].juPoints;\n\n        i = (i + 1) % 2;\n        label = this.panOver.getChildByName(\"计分板\").getChildByName(\"他队积分详情\").getComponent(Label);\n        label.string = \"牌面积分：\" + panGameInfo[i].points + \"\\n队伍积分：\" + panGameInfo[i].teamPoints \n        + \"\\n总计：\" + panGameInfo[i].total + \"\\n局分：\" + panGameInfo[i].juPoints;\n    }\n    onUpdatePoints(data) {\n        let seat = (data.seat - globalThis._userInfo.room_seat + 4) % 4;\n        let panPoints = data.panPoints;\n        this.seatPanPoints[seat].string = \"盘:\" + panPoints;\n        this.seatPanPoints[(seat + 2) % 4].string = \"盘:\" + panPoints;\n    }\n\n    \n    public onRequestRoomInfo(data){\n        console.log(\"onrequestroomInfo: \",data);\n        let roomInfo = data.roomInfo;\n        this.roomId.string = roomInfo.roomId;\n        this.gamecount.string = roomInfo.currentNumbers + \"/\" + roomInfo.gameNumbers + \"局 \" + roomInfo.scoreNumbers + \"分\";\n        this.updateAllSeats(roomInfo);\n    }\n\n    updateAllSeats(roomInfo){\n        let users: GameRole[] = roomInfo.gameRoles;\n        //先找到本玩家座位号\n        let cur = 0;\n        for(let i = 0; i < 4; i++){\n            if(users[i] == null){\n                continue;\n            }\n            if(users[i].userId == globalThis._userInfo.user_id){\n                cur = i;\n            }\n        }\n        globalThis._userInfo.room_seat = cur;\n        //渲染各座位信息\n        for(let i = 0, j = cur; i < 4; i++, j++){\n            if(j >= 4)j -= 4;\n            if(users[j] == null)continue;\n            this.seatName[i].string = users[j].userName;\n            this.seatTotalPoints[i].string = \"总分:\" + users[j].totalPoints;\n            this.seatJuPoints[i].string = \"局:\" + users[j].juPoints;\n            this.seatPanPoints[i].string = \"盘:\" + users[j].panPoints;\n            this.readyOk[i].active = (users[j].userStatus.status == \"READY\");\n        }\n        let status = users[0].userStatus.status;\n        //还未发牌\n        if(status == \"UNREADY\" || status == \"READY\"){\n            for(let i = 0, j = cur; i < 4; i++, j++){\n                if(j >= 4)j -= 4;\n                if(users[j] == null)continue;\n                let bool = users[j].userStatus.status == \"READY\";\n                this.readyOk[i].active = bool;\n            }\n            let bool = users[cur].userStatus.status == \"READY\";\n            this.readyBtn.active = !bool;\n            this.cancelReadyBtn.active = bool;\n            if(roomInfo.readyNumbers == 4 && globalThis._userInfo.user_id == roomInfo.createUserId)this.startBtn.active = true;\n            else this.startBtn.active = false;\n        }else {\n            //已经发牌了\n            //显示玩家手牌\n            this.cardList = users[cur].userCards;\n            this.onloadAtlas();\n            let bool = true;\n            for(let i = 0, j = cur; i < 4; i++, j++){\n                if(j >= 4)j -= 4;\n                let status = users[j].userStatus.status;\n                if(status == \"PLAYED\"){\n                    let cardList = users[j].userStatus.data;\n                    this.showPushCards(i, cardList);\n                    bool = false;\n                }else if(status == \"PLAYING\"){\n                    //\n                }else if(status == \"PASS\"){\n                    this.passLable[i].active = true;\n                }else if(status == \"END\"){\n                    //\n                }\n            }\n            if(users[cur].userStatus.status == \"PLAYING\"){\n                this.pushCardBtn.active = true;\n                this.passBtn.active = bool;\n            }\n            this.paiPoints.string = \"牌面积分:\" + roomInfo.curPoints;\n        }\n    }\n\n    onUserReady(data){\n        let mySeat = globalThis._userInfo.room_seat;\n        if(data.readyNumbers == 4 && globalThis._userInfo.user_id == data.createUserId)this.startBtn.active = true;\n        else this.startBtn.active = false;\n        let seat = data.seat;\n        let ready:boolean = (data.isReady == 1);\n        this.readyOk[(seat - mySeat + 4) % 4].active = ready;\n        \n    }\n    onReadyBtnClicked(){\n        this.readyBtn.active = false;\n        this.cancelReadyBtn.active = true;\n        globalThis._BZDClient.sendMessage(\"userReady\",{seat:globalThis._userInfo.room_seat, isReady: 1, roomId:globalThis._userInfo.room_id})\n    }\n\n    onCancelReadyBtnClicked(){\n        this.readyBtn.active = true;\n        this.cancelReadyBtn.active = false;\n        globalThis._BZDClient.sendMessage(\"userReady\",{seat:globalThis._userInfo.room_seat, isReady: -1, roomId:globalThis._userInfo.room_id})\n    }\n\n    onStartBtnClicked(){\n        globalThis._BZDClient.sendMessage(\"dealCards\",{});\n    }\n\n    onExitRoomBtnClicked(){\n        director.loadScene(\"HallScene\");\n    }\n\n    onDealCards(data){\n        console.log(\"获得牌型：\",data);\n        \n        this.startBtn.active = false;\n        this.readyBtn.active = false;\n        this.cancelReadyBtn.active = false;\n        //初始化各出牌区域\n        for(let i = 0; i < 4; i++){\n            this.cleanPushCards(i);\n        }\n        for(let i = 0; i < 4; i++){\n            this.readyOk[i].active = false;\n        }\n        let cards = data.cardList[globalThis._userInfo.room_seat];\n        \n        this.cardList = cards;\n        this.onloadAtlas()\n        if(globalThis._userInfo.room_seat == 0){\n            this.showPushCardsBtn();\n        }\n    }\n\n    onloadAtlas() {\n        resources.load(\"image/games/bazhadan/card/pokerlist\", SpriteAtlas, (err, spriteAtlas)=>{\n            if(err)console.log(\"load atlas err: \", err);\n            else {\n                this.pokerAtlas = spriteAtlas;\n                this.showPoker();\n            }\n        })\n    }\n    showPoker() {\n        this.pokerView.active = true;\n        this.passBtn.active = false;\n        this.pushCardBtn.active = false;\n        let bpk = this.pokerAtlas.getSpriteFrame(\"0\");\n        let x = -360, y = -50, z = 0;\n        for(let i = 0; i < this.cardList.length; i++){\n            if(i == 17){\n                y = -150;\n                x -= 850;\n            }\n            let pk = this.pokerAtlas.getSpriteFrame(this.cardList[i]+\"\");\n            let cardName = \"card\" + i;\n            let cardNode = this.pokerView.getChildByName(cardName);\n            cardNode.setPosition(new Vec3(0, 185, 0));\n            cardNode.active = true;\n            let sp = cardNode.getComponent(Sprite);\n            sp.spriteFrame = bpk;\n            tween(cardNode).to(1.5,{position: new Vec3(i*50+x, y, z)}).call(() => sp.spriteFrame = pk).start();\n        }\n    }\n\n    onCardClicked(type,arg){\n        let cardName = \"card\" + arg;\n        let cardNode = this.pokerView.getChildByName(cardName);\n        \n        let p = cardNode.getPosition()\n        if(this.cardSet.has(arg)){\n            this.cardSet.delete(arg);\n            p.y -= 30;\n        }else {\n            this.cardSet.add(arg);\n            p.y += 30;\n        }\n        cardNode.setPosition(p);\n    }\n\n    onPushCardBtnClicked(){\n        console.log(\"出牌！\")\n        console.log(this.pushcardVo);\n        console.log(JSON.stringify(this.pushcardVo));\n        this.pushcardVo.curCardList.length = 0;\n        \n        let cards = Array.from(this.cardSet);\n        cards.sort((a, b) => a - b);\n        console.log(\"eee:\",cards);\n        for(let i of cards){\n            let cardName = \"card\" + i;\n            let cardNode = this.pokerView.getChildByName(cardName);\n            let sp = cardNode.getComponent(Sprite);\n            let spf = sp.spriteFrame;\n            let cardValue = spf.name;\n            this.pushcardVo.curCardList.push(Number(cardValue));\n        }\n        this.pushcardVo.curSeat = globalThis._userInfo.room_seat;\n        globalThis._BZDClient.sendMessage(\"pushCards\",{pushCardsInfo: JSON.stringify(this.pushcardVo)});\n        \n    }\n\n    onPushCards(data){\n        this.pushcardVo = data.pushCardsInfo;\n        let curSeat = globalThis._userInfo.room_seat;\n        let isRight: boolean = data.isRight;\n        //出牌正确\n        if(isRight){\n            //是我出的牌\n            if(curSeat == this.pushcardVo.preSeat){\n                if(this.pushcardVo.preStatus == \"PLAYED\"){\n                    let length = this.cardSet.size;\n                    let d_x = 30;\n                    let x = -70 - d_x * (length / 2);\n                    let cards = Array.from(this.cardSet);\n                    cards.sort((a, b) => a - b);\n                    for(let i of cards){\n                        this.pushCardSet.add(i);\n                        let cardName = \"card\" + i;\n                        let cardNode = this.pokerView.getChildByName(cardName);\n                        tween(cardNode).to(0.8,{position: new Vec3(x,90,0)}).start();\n                        x += d_x;\n                    }\n                    this.cardSet.clear();\n                    this.passBtn.active = false;\n                    this.pushCardBtn.active = false;\n                }else if(this.pushcardVo.preStatus == \"PASS\"){\n\n                }\n            }\n            \n            //不是我出的牌，将对应出牌位置更新\n            else{\n                //先更新出牌位置信息(将牌型展出)，到下一家出牌\n                let seat = (this.pushcardVo.preSeat - curSeat + 4) % 4;\n                this.cleanPushCards(seat);\n                if(this.pushcardVo.preSeat == this.pushcardVo.prePushSeat){//if(this.pushcardVo.preStatus == \"PLAYED\")\n                    let cardList = this.pushcardVo.preCardList;                   \n                    this.showPushCards(seat, cardList);\n                    // let pushCardsView = this.pushCardsView[seat];\n                    // for(let i = 0; i < cardList.length; i++){\n                    //     let pk = this.pokerAtlas.getSpriteFrame(cardList[i]+\"\");\n                    //     let cardName = \"card\" + i;\n                    //     let cardNode = pushCardsView.getChildByName(cardName);\n                    //     let sp = cardNode.getComponent(Sprite);\n                    //     sp.spriteFrame = pk;\n                    //     cardNode.active = true;\n                    // }\n                }else if(this.pushcardVo.preStatus == \"PASS\"){\n                    this.passLable[seat].active = true;\n                }else if(this.pushcardVo.preStatus == \"END\"){\n\n                }\n                \n                //如果下家是我\n                if((this.pushcardVo.preSeat + 1) % 4 == curSeat){\n                    for(let i of this.pushCardSet){\n                        let cardName = \"card\" + i;\n                        let cardNode = this.pokerView.getChildByName(cardName);\n                        cardNode.active = false;\n                    }\n                    this.pushCardSet.clear();\n                    if(this.pushcardVo.myStatus == \"PLAYING\"){\n                        this.cleanPushCards(0);\n                        this.showPushCardsBtn();\n                    }else if(this.pushcardVo.myStatus == \"END\"){\n                        this.pushcardVo.curSeat = globalThis._userInfo.room_seat;\n                        globalThis._BZDClient.sendMessage(\"userEnd\",{pushCardsInfo: JSON.stringify(this.pushcardVo)});\n                    }else if(this.pushcardVo.myStatus == \"OVER\"){\n                        console.log(\"游戏结束!\")\n                        this.pushcardVo.curSeat = globalThis._userInfo.room_seat;\n                        globalThis._BZDClient.sendMessage(\"panGameOver\",{pushCardsInfo: JSON.stringify(this.pushcardVo)});\n                    }else if(this.pushcardVo.myStatus == \"TOTEAMMATE\"){\n                        this.pushcardVo.curSeat = globalThis._userInfo.room_seat;\n                        globalThis._BZDClient.sendMessage(\"TOTEAMMATE\",{pushCardsInfo: JSON.stringify(this.pushcardVo)});\n                    }\n                }\n            }\n            this.paiPoints.string = \"牌面积分:\" + this.pushcardVo.points;\n        }\n        //出牌不正确\n        else {\n            if(curSeat == this.pushcardVo.curSeat){\n                //是我出的牌\n                console.log(\"不能这样出牌！\");\n            }\n            else {\n                //不是我出的牌，不用管\n            }\n        }\n    }\n    showPushCards(seat, cardList){\n        let pushCardsView = this.pushCardsView[seat];\n        for(let i = 0; i < cardList.length; i++){\n            let pk = this.pokerAtlas.getSpriteFrame(cardList[i]+\"\");\n            let cardName = \"card\" + i;\n            let cardNode = pushCardsView.getChildByName(cardName);\n            let sp = cardNode.getComponent(Sprite);\n            sp.spriteFrame = pk;\n            cardNode.active = true;\n        }\n    }\n    showPushCardsBtn() {\n        if(globalThis._userInfo.room_seat == this.pushcardVo.prePushSeat)\n            this.passBtn.active = false;\n        else \n            this.passBtn.active = true;\n        this.pushCardBtn.active = true;\n    }\n\n    onPassBtnClicked(){\n        this.passBtn.active = false;\n        this.pushCardBtn.active = false;\n        this.passLable[0].active = true;\n        this.pushcardVo.curSeat = globalThis._userInfo.room_seat;\n        this.cleanCardSet();\n        globalThis._BZDClient.sendMessage(\"passCards\",{pushCardsInfo: JSON.stringify(this.pushcardVo)});\n    }\n\n    cleanCardSet(){\n        for(let arg of this.cardSet){\n            let cardName = \"card\" + arg;\n            let cardNode = this.pokerView.getChildByName(cardName);\n            let p = cardNode.getPosition()\n            this.cardSet.delete(arg);\n            p.y -= 30;\n            cardNode.setPosition(p);\n        }\n    }\n\n    cleanPushCards(i){\n        let pcv = this.pushCardsView[i];\n        pcv.active = true;\n        for(let i = 0; i < 27; i++){\n            let cardName = \"card\" + i;\n            let cardNode = pcv.getChildByName(cardName);\n            // let sp = cardNode.getComponent(Sprite);\n            // sp.spriteFrame = null;\n            cardNode.active = false;\n        }\n        this.passLable[i].active = false;\n    }\n\n    onPanOverPageClosedBtnClicked(){\n        this.panOver.active = false;\n        globalThis._BZDClient.sendMessage(\"requestRoomInfo\",{});\n    }\n}\n\n\n"]}