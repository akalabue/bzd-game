{"version":3,"sources":["file:///D:/Documents/OneDrive/%E6%A1%8C%E9%9D%A2/%E5%85%B6%E4%BB%96%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%AF%95%E4%B8%9A%E8%AE%BE%E8%AE%A1/PokerBomb/PokerBomb-Client/assets/Script/games/bazhadan/BZDSceneMgt.ts"],"names":["_decorator","Component","Node","Label","SpriteAtlas","resources","Sprite","director","tween","Vec3","PushCardVo","ccclass","property","BZDSceneMgt","cardList","pokerAtlas","cardSet","Set","pushCardSet","pushcardVo","start","init","console","log","globalThis","_eventtarget","on","onRequestRoomInfo","onUserReady","onDealCards","onPushCards","onUpdatePoints","data","seat","_userInfo","room_seat","panPoints","seatPanPoints","string","roomInfo","roomId","gamecount","currentNumbers","gameNumbers","scoreNumbers","updateAllSeats","users","gameRoles","cur","i","userId","user_id","j","seatName","userName","seatTotalPoints","totalPoints","seatJuPoints","juPoints","readyOk","active","userStatus","status","bool","readyBtn","cancelReadyBtn","readyNumbers","createUserId","startBtn","userCards","showPoker","showPushCards","passLable","pushCardBtn","passBtn","paiPoints","curPoints","mySeat","ready","isReady","onReadyBtnClicked","_BZDClient","sendMessage","room_id","onCancelReadyBtnClicked","onStartBtnClicked","onExitRoomBtnClicked","loadScene","cleanPushCards","cards","onloadAtlas","load","err","spriteAtlas","showPushCardsBtn","pokerView","bpk","getSpriteFrame","x","y","z","length","pk","cardName","cardNode","getChildByName","setPosition","sp","getComponent","spriteFrame","to","position","call","onCardClicked","type","arg","p","getPosition","has","delete","add","onPushCardBtnClicked","JSON","stringify","curCardList","Array","from","sort","a","b","spf","cardValue","name","push","Number","curSeat","pushCardsInfo","isRight","preSeat","preStatus","size","d_x","clear","prePushSeat","preCardList","myStatus","points","pushCardsView","onPassBtnClicked","cleanCardSet","pcv","onPanOverPageClosedBtnClicked","panOver"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Label, System, assetManager, AssetManager, SpriteAtlas, Prefab, instantiate, resources, SpriteFrame, Sprite, director, tween, Vec3 } from 'cc';\nimport { GameRole } from '../../common/GameRole';\nimport { PushCardVo } from '../../common/PushCardVo';\nimport { Poker } from './Poker';\nimport { PokerCtr } from './PokerCtr';\nconst { ccclass, property } = _decorator;\n\n@ccclass('BZDSceneMgt')\nexport class BZDSceneMgt extends Component {\n\n    @property(Label)\n    public roomId: Label\n    @property(Label)\n    public gamecount: Label\n\n    @property(Label)\n    seatName: Label[] = [];\n    @property(Label)\n    seatTotalPoints: Label[] = [];\n    \n    @property(Label)\n    seatJuPoints: Label[] = []\n    \n    @property(Label)\n    seatPanPoints: Label[] = []\n    \n    @property(Node)\n    readyOk: Node[] = []\n\n    @property(Node)\n    pushCardsView: Node[] = []\n\n    @property(Node)\n    passLable: Node[] = []\n    \n    @property(Node)\n    readyBtn: Node\n    \n    @property(Node)\n    cancelReadyBtn: Node\n    \n    @property(Node)\n    startBtn: Node\n\n    @property(Node)\n    pokerView: Node\n\n    @property(Node)\n    passBtn: Node\n\n    @property(Node)\n    pushCardBtn: Node\n\n    @property(Label)\n    paiPoints: Label\n\n    @property(Node)\n    panOver: Node\n\n\n    cardList: number[];\n    pokerAtlas: SpriteAtlas;\n    cardSet: Set<number> = new Set;\n    pushCardSet: Set<number> = new Set;\n    pushcardVo: PushCardVo\n\n    \n    start() {\n        this.init();\n        console.log(\"怡怡最美~\");\n        console.log(\"最爱怡怡~\");\n    }\n\n    private init(){\n        this.pushcardVo = new PushCardVo();\n        globalThis._eventtarget.on(\"requestRoomInfo\", this.onRequestRoomInfo, this);\n        globalThis._eventtarget.on(\"userReady\", this.onUserReady, this);\n        globalThis._eventtarget.on(\"dealCards\", this.onDealCards, this);\n        globalThis._eventtarget.on(\"pushCards\", this.onPushCards, this);\n        globalThis._eventtarget.on(\"updatePoints\", this.onUpdatePoints, this);\n    }\n    onUpdatePoints(data) {\n        let seat = (data.seat - globalThis._userInfo.room_seat + 4) % 4;\n        let panPoints = data.panPoints;\n        this.seatPanPoints[seat].string = \"盘:\" + panPoints;\n        this.seatPanPoints[(seat + 2) % 4].string = \"盘:\" + panPoints;\n    }\n\n    \n    public onRequestRoomInfo(data){\n        console.log(\"onrequestroomInfo: \",data);\n        let roomInfo = data.roomInfo;\n        this.roomId.string = roomInfo.roomId;\n        this.gamecount.string = roomInfo.currentNumbers + \"/\" + roomInfo.gameNumbers + \"局 \" + roomInfo.scoreNumbers + \"分\";\n        this.updateAllSeats(roomInfo);\n    }\n\n    updateAllSeats(roomInfo){\n        let users: GameRole[] = roomInfo.gameRoles;\n        //先找到本玩家座位号\n        let cur = 0;\n        for(let i = 0; i < 4; i++){\n            if(users[i] == null){\n                continue;\n            }\n            if(users[i].userId == globalThis._userInfo.user_id){\n                cur = i;\n            }\n        }\n        globalThis._userInfo.room_seat = cur;\n        //渲染各座位信息\n        for(let i = 0, j = cur; i < 4; i++, j++){\n            if(j >= 4)j -= 4;\n            if(users[j] == null)continue;\n            this.seatName[i].string = users[j].userName;\n            this.seatTotalPoints[i].string = \"总分:\" + users[j].totalPoints;\n            this.seatJuPoints[i].string = \"局:\" + users[j].juPoints;\n            this.seatPanPoints[i].string = \"盘:\" + users[j].panPoints;\n            this.readyOk[i].active = (users[j].userStatus.status == \"READY\");\n        }\n        let status = users[0].userStatus.status;\n        //还未发牌\n        if(status == \"UNREADY\" || status == \"READY\"){\n            for(let i = 0, j = cur; i < 4; i++, j++){\n                if(j >= 4)j -= 4;\n                if(users[j] == null)continue;\n                let bool = users[j].userStatus.status == \"READY\";\n                this.readyOk[i].active = bool;\n            }\n            let bool = users[cur].userStatus.status == \"READY\";\n            this.readyBtn.active = !bool;\n            this.cancelReadyBtn.active = bool;\n            if(roomInfo.readyNumbers == 4 && globalThis._userInfo.user_id == roomInfo.createUserId)this.startBtn.active = true;\n            else this.startBtn.active = false;\n        }else {\n            //已经发牌了\n            //显示玩家手牌\n            this.cardList = users[cur].userCards;\n            this.showPoker();\n            let bool = true;\n            for(let i = 0, j = cur; i < 4; i++, j++){\n                if(j >= 4)j -= 4;\n                let status = users[j].userStatus.status;\n                if(status == \"PLAYED\"){\n                    let cardList = users[j].userStatus.data;\n                    this.showPushCards(i, cardList);\n                    bool = false;\n                }else if(status == \"PLAYING\"){\n                    //\n                }else if(status == \"PASS\"){\n                    this.passLable[i].active = true;\n                }else if(status == \"END\"){\n                    //\n                }\n            }\n            if(users[cur].userStatus.status == \"PLAYING\"){\n                this.pushCardBtn.active = true;\n                this.passBtn.active = bool;\n            }\n            this.paiPoints.string = \"牌面积分:\" + roomInfo.curPoints;\n        }\n\n\n\n        // console.log(\"获取到所有座位信息：\",users);\n        \n\n        //渲染本座位\n        // for(let i = 0; i < 4; i++){\n        //     if(users[i] == null){\n        //         continue;\n        //     }\n        //     if(users[i].userId == globalThis._userInfo.user_id){\n        //         cur = i;\n        //         this.seatName[0].string = users[i].userName;\n        //         this.seatTotalPoints[0].string = \"总分:\" + users[i].totalPoints;\n        //         this.seatJuPoints[0].string = \"局:\" + users[i].juPoints;\n        //         this.seatPanPoints[0].string = \"盘:\" + users[i].panPoints;\n        //         this.readyOk[0].active = (users[i].userStatus.status == \"READY\");\n        //     }\n        // }\n        // globalThis._userInfo.room_seat = cur;\n        // //渲染其他座位\n        // for(let i = 1; i < 4; i++){\n        //     if(++cur >= 4)cur -= 4;\n        //     if(users[cur] == null)continue;\n        //     this.seatName[i].string = users[cur].userName;\n        //     this.seatTotalPoints[i].string = \"总分:\" + users[cur].totalPoints;\n        //     this.seatJuPoints[i].string = \"局:\" + users[cur].juPoints;\n        //     this.seatPanPoints[i].string = \"盘:\" + users[cur].panPoints;\n        //     this.readyOk[i].active = (users[cur].userStatus.status == \"READY\");\n        // }\n    }\n\n    onUserReady(data){\n        let mySeat = globalThis._userInfo.room_seat;\n        if(data.readyNumbers == 4 && globalThis._userInfo.user_id == data.createUserId)this.startBtn.active = true;\n        else this.startBtn.active = false;\n        let seat = data.seat;\n        let ready:boolean = (data.isReady == 1);\n        this.readyOk[(seat - mySeat + 4) % 4].active = ready;\n        \n    }\n    onReadyBtnClicked(){\n        this.readyBtn.active = false;\n        this.cancelReadyBtn.active = true;\n        globalThis._BZDClient.sendMessage(\"userReady\",{seat:globalThis._userInfo.room_seat, isReady: 1, roomId:globalThis._userInfo.room_id})\n    }\n\n    onCancelReadyBtnClicked(){\n        this.readyBtn.active = true;\n        this.cancelReadyBtn.active = false;\n        globalThis._BZDClient.sendMessage(\"userReady\",{seat:globalThis._userInfo.room_seat, isReady: -1, roomId:globalThis._userInfo.room_id})\n    }\n\n    onStartBtnClicked(){\n        globalThis._BZDClient.sendMessage(\"dealCards\",{});\n    }\n\n    onExitRoomBtnClicked(){\n        director.loadScene(\"HallScene\");\n    }\n\n    onDealCards(data){\n        console.log(\"获得牌型：\",data);\n        \n        this.startBtn.active = false;\n        this.readyBtn.active = false;\n        this.cancelReadyBtn.active = false;\n        //初始化各出牌区域\n        for(let i = 0; i < 4; i++){\n            this.cleanPushCards(i);\n        }\n        for(let i = 0; i < 4; i++){\n            this.readyOk[i].active = false;\n        }\n        let cards = data.cardList[globalThis._userInfo.room_seat];\n        \n        this.cardList = cards;\n        this.onloadAtlas()\n    }\n\n    onloadAtlas() {\n        resources.load(\"image/games/bazhadan/card/pokerlist\", SpriteAtlas, (err, spriteAtlas)=>{\n            if(err)console.log(\"load atlas err: \", err);\n            else {\n                this.pokerAtlas = spriteAtlas;\n                this.showPoker();\n                if(globalThis._userInfo.room_seat == 0){\n                    this.showPushCardsBtn();\n                }\n            }\n        })\n    }\n    showPoker() {\n        this.pokerView.active = true;\n        this.passBtn.active = false;\n        this.pushCardBtn.active = false;\n        let bpk = this.pokerAtlas.getSpriteFrame(\"0\");\n        let x = -360, y = -50, z = 0;\n        for(let i = 0; i < this.cardList.length; i++){\n            if(i == 17){\n                y = -150;\n                x -= 850;\n            }\n            let pk = this.pokerAtlas.getSpriteFrame(this.cardList[i]+\"\");\n            let cardName = \"card\" + i;\n            let cardNode = this.pokerView.getChildByName(cardName);\n            cardNode.setPosition(new Vec3(0, 185, 0));\n            cardNode.active = true;\n            let sp = cardNode.getComponent(Sprite);\n            sp.spriteFrame = bpk;\n            tween(cardNode).to(1.5,{position: new Vec3(i*50+x, y, z)}).call(() => sp.spriteFrame = pk).start();\n        }\n    }\n\n    onCardClicked(type,arg){\n        let cardName = \"card\" + arg;\n        let cardNode = this.pokerView.getChildByName(cardName);\n        \n        let p = cardNode.getPosition()\n        if(this.cardSet.has(arg)){\n            this.cardSet.delete(arg);\n            p.y -= 30;\n        }else {\n            this.cardSet.add(arg);\n            p.y += 30;\n        }\n        cardNode.setPosition(p);\n    }\n\n    onPushCardBtnClicked(){\n        console.log(\"出牌！\")\n        console.log(this.pushcardVo);\n        console.log(JSON.stringify(this.pushcardVo));\n        this.pushcardVo.curCardList.length = 0;\n        \n        let cards = Array.from(this.cardSet);\n        cards.sort((a, b) => a - b);\n        console.log(\"eee:\",cards);\n        for(let i of cards){\n            let cardName = \"card\" + i;\n            let cardNode = this.pokerView.getChildByName(cardName);\n            let sp = cardNode.getComponent(Sprite);\n            let spf = sp.spriteFrame;\n            let cardValue = spf.name;\n            this.pushcardVo.curCardList.push(Number(cardValue));\n        }\n        this.pushcardVo.curSeat = globalThis._userInfo.room_seat;\n        globalThis._BZDClient.sendMessage(\"pushCards\",{pushCardsInfo: JSON.stringify(this.pushcardVo)});\n        \n    }\n\n    onPushCards(data){\n        this.pushcardVo = data.pushCardsInfo;\n        let curSeat = globalThis._userInfo.room_seat;\n        let isRight: boolean = data.isRight;\n        //出牌正确\n        if(isRight){\n            //是我出的牌\n            if(curSeat == this.pushcardVo.preSeat){\n                if(this.pushcardVo.preStatus == \"PLAYED\"){\n                    let length = this.cardSet.size;\n                    let d_x = 30;\n                    let x = -70 - d_x * (length / 2);\n                    let cards = Array.from(this.cardSet);\n                    cards.sort((a, b) => a - b);\n                    for(let i of cards){\n                        this.pushCardSet.add(i);\n                        let cardName = \"card\" + i;\n                        let cardNode = this.pokerView.getChildByName(cardName);\n                        tween(cardNode).to(0.8,{position: new Vec3(x,90,0)}).start();\n                        x += d_x;\n                    }\n                    this.cardSet.clear();\n                    this.passBtn.active = false;\n                    this.pushCardBtn.active = false;\n                }else if(this.pushcardVo.preStatus == \"PASS\"){\n\n                }\n            }\n            \n            //不是我出的牌，将对应出牌位置更新\n            else{\n                //先更新出牌位置信息(将牌型展出)，到下一家出牌\n                let seat = (this.pushcardVo.preSeat - curSeat + 4) % 4;\n                this.cleanPushCards(seat);\n                if(this.pushcardVo.preSeat == this.pushcardVo.prePushSeat){//if(this.pushcardVo.preStatus == \"PLAYED\")\n                    let cardList = this.pushcardVo.preCardList;                   \n                    this.showPushCards(seat, cardList);\n                    // let pushCardsView = this.pushCardsView[seat];\n                    // for(let i = 0; i < cardList.length; i++){\n                    //     let pk = this.pokerAtlas.getSpriteFrame(cardList[i]+\"\");\n                    //     let cardName = \"card\" + i;\n                    //     let cardNode = pushCardsView.getChildByName(cardName);\n                    //     let sp = cardNode.getComponent(Sprite);\n                    //     sp.spriteFrame = pk;\n                    //     cardNode.active = true;\n                    // }\n                }else if(this.pushcardVo.preStatus == \"PASS\"){\n                    this.passLable[seat].active = true;\n                }else if(this.pushcardVo.preStatus == \"END\"){\n\n                }\n                \n                //如果下家是我\n                if((this.pushcardVo.preSeat + 1) % 4 == curSeat){\n                    for(let i of this.pushCardSet){\n                        let cardName = \"card\" + i;\n                        let cardNode = this.pokerView.getChildByName(cardName);\n                        cardNode.active = false;\n                    }\n                    this.pushCardSet.clear();\n                    if(this.pushcardVo.myStatus == \"PLAYING\"){\n                        this.cleanPushCards(0);\n                        this.showPushCardsBtn();\n                    }else if(this.pushcardVo.myStatus == \"END\"){\n                        this.pushcardVo.curSeat = globalThis._userInfo.room_seat;\n                        globalThis._BZDClient.sendMessage(\"userEnd\",{pushCardsInfo: JSON.stringify(this.pushcardVo)});\n                    }else if(this.pushcardVo.myStatus == \"OVER\"){\n                        console.log(\"游戏结束!\")\n                        this.pushcardVo.curSeat = globalThis._userInfo.room_seat;\n                        globalThis._BZDClient.sendMessage(\"panGameOver\",{pushCardsInfo: JSON.stringify(this.pushcardVo)});\n                    }else if(this.pushcardVo.myStatus == \"TOTEAMMATE\"){\n                        this.pushcardVo.curSeat = globalThis._userInfo.room_seat;\n                        globalThis._BZDClient.sendMessage(\"TOTEAMMATE\",{pushCardsInfo: JSON.stringify(this.pushcardVo)});\n                    }\n                }\n            }\n            this.paiPoints.string = \"牌面积分:\" + this.pushcardVo.points;\n        }\n        //出牌不正确\n        else {\n            if(curSeat == this.pushcardVo.curSeat){\n                //是我出的牌\n                console.log(\"不能这样出牌！\");\n            }\n            else {\n                //不是我出的牌，不用管\n            }\n        }\n    }\n    showPushCards(seat, cardList){\n        let pushCardsView = this.pushCardsView[seat];\n        for(let i = 0; i < cardList.length; i++){\n            let pk = this.pokerAtlas.getSpriteFrame(cardList[i]+\"\");\n            let cardName = \"card\" + i;\n            let cardNode = pushCardsView.getChildByName(cardName);\n            let sp = cardNode.getComponent(Sprite);\n            sp.spriteFrame = pk;\n            cardNode.active = true;\n        }\n    }\n    showPushCardsBtn() {\n        if(globalThis._userInfo.room_seat == this.pushcardVo.prePushSeat)\n            this.passBtn.active = false;\n        else \n            this.passBtn.active = true;\n        this.pushCardBtn.active = true;\n    }\n\n    onPassBtnClicked(){\n        this.passBtn.active = false;\n        this.pushCardBtn.active = false;\n        this.passLable[0].active = true;\n        this.pushcardVo.curSeat = globalThis._userInfo.room_seat;\n        this.cleanCardSet();\n        globalThis._BZDClient.sendMessage(\"passCards\",{pushCardsInfo: JSON.stringify(this.pushcardVo)});\n    }\n\n    cleanCardSet(){\n        for(let arg of this.cardSet){\n            let cardName = \"card\" + arg;\n            let cardNode = this.pokerView.getChildByName(cardName);\n            let p = cardNode.getPosition()\n            this.cardSet.delete(arg);\n            p.y -= 30;\n            cardNode.setPosition(p);\n        }\n    }\n\n    cleanPushCards(i){\n        let pcv = this.pushCardsView[i];\n        pcv.active = true;\n        for(let i = 0; i < 27; i++){\n            let cardName = \"card\" + i;\n            let cardNode = pcv.getChildByName(cardName);\n            // let sp = cardNode.getComponent(Sprite);\n            // sp.spriteFrame = null;\n            cardNode.active = false;\n        }\n        this.passLable[i].active = false;\n    }\n\n    onPanOverPageClosedBtnClicked(){\n        this.panOver.active = false;\n        globalThis._BZDClient.sendMessage(\"requestRoomInfo\",{});\n    }\n}\n\n\n"]}