{"version":3,"sources":["file:///D:/Documents/OneDrive/%E6%A1%8C%E9%9D%A2/%E5%85%B6%E4%BB%96%E6%96%87%E4%BB%B6%E5%A4%B9/%E6%AF%95%E4%B8%9A%E8%AE%BE%E8%AE%A1/PokerBomb/PokerBomb-Client/assets/Script/hallScene/HallSoundMgt.ts"],"names":["_decorator","Component","AudioClip","AudioSource","ccclass","property","HallSoundMgt","_dict","Map","_audioSource","start","i","audioList","length","element","set","name","getComponent","console","log","play","audioClip","get","undefined","playOneShot"],"mappings":";;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,W,OAAAA,W;;;;;;;OAC3C;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBL,U;;8BAGjBM,Y,WADZF,OAAO,CAAC,cAAD,C,UAEHC,QAAQ,CAAC,CAACH,SAAD,CAAD,C,2BAFb,MACaI,YADb,SACkCL,SADlC,CAC4C;AAAA;AAAA;;AAAA;;AAAA,eAIhCM,KAJgC,GAIA,IAAIC,GAAJ,EAJA;AAAA,eAKhCC,YALgC,GAKJ,IALI;AAAA;;AAOxCC,QAAAA,KAAK,GAAG;AACJ,eAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKC,SAAL,CAAeC,MAAnC,EAA2CF,CAAC,EAA5C,EAAgD;AAC5C,kBAAMG,OAAO,GAAG,KAAKF,SAAL,CAAeD,CAAf,CAAhB;;AACA,iBAAKJ,KAAL,CAAWQ,GAAX,CAAeD,OAAO,CAACE,IAAvB,EAA6BF,OAA7B;AACH;;AAED,eAAKL,YAAL,GAAoB,KAAKQ,YAAL,CAAkBd,WAAlB,CAApB,CANI,CAM+C;;AACnDe,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAKZ,KAAjB;AACH;;AAEMa,QAAAA,IAAI,CAACJ,IAAD,EAAe;AACtB,gBAAMK,SAAS,GAAG,KAAKd,KAAL,CAAWe,GAAX,CAAeN,IAAf,CAAlB;;AACAE,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAKZ,KAAjB,EAAuBc,SAAvB,EAAiC,KAAKZ,YAAtC;;AACA,cAAIY,SAAS,KAAKE,SAAlB,EAA6B;AACzB,iBAAKd,YAAL,CAAkBe,WAAlB,CAA8BH,SAA9B;AACH;AACJ;;AAvBuC,O;;;;;iBAER,E","sourcesContent":["import { _decorator, Component, Node, AudioClip, AudioSource } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('HallSoundMgt')\nexport class HallSoundMgt extends Component {\n    @property([AudioClip])\n    public audioList: AudioClip[] = [];\n\n    private _dict: Map<string, AudioClip> = new Map();//音频集合\n    private _audioSource: AudioSource = null;\n    \n    start() {\n        for (let i = 0; i < this.audioList.length; i++) {\n            const element = this.audioList[i];\n            this._dict.set(element.name, element);\n        }\n\n        this._audioSource = this.getComponent(AudioSource);//音频组件初始化\n        console.log(this._dict);\n    }\n\n    public play(name: string) {\n        const audioClip = this._dict.get(name);\n        console.log(this._dict,audioClip,this._audioSource);\n        if (audioClip !== undefined) {\n            this._audioSource.playOneShot(audioClip);\n        }\n    }\n}\n\n"]}